!function(a, b, c) {
    "use strict";
    function d(a, c, d, e, f, g) {
        function h(a, c) {
            return angular.element((c || b).querySelectorAll(a));
        }
        function i(a) {
            return j[a] ? j[a] : j[a] = c.get(a, {
                cache: g
            }).then(function(a) {
                return a.data;
            });
        }
        this.compile = function(b) {
            b.template && /\.html$/.test(b.template) && (console.warn("Deprecated use of `template` option to pass a file. Please use the `templateUrl` option instead."), 
            b.templateUrl = b.template, b.template = "");
            var c = b.templateUrl, g = b.template || "", j = b.controller, k = b.controllerAs, l = angular.copy(b.resolve || {}), m = angular.copy(b.locals || {}), n = b.transformTemplate || angular.identity, o = b.bindToController;
            if (angular.forEach(l, function(a, b) {
                angular.isString(a) ? l[b] = d.get(a) : l[b] = d.invoke(a);
            }), angular.extend(l, m), g) l.$template = a.when(g); else {
                if (!c) throw new Error("Missing `template` / `templateUrl` option.");
                l.$template = i(c);
            }
            return b.contentTemplate && (l.$template = a.all([ l.$template, i(b.contentTemplate) ]).then(function(a) {
                var c = angular.element(a[0]), d = h('[ng-bind="content"]', c[0]).removeAttr("ng-bind").html(a[1]);
                return b.templateUrl || d.next().remove(), c[0].outerHTML;
            })), a.all(l).then(function(a) {
                var c = n(a.$template);
                b.html && (c = c.replace(/ng-bind="/gi, 'ng-bind-html="'));
                var d = angular.element("<div>").html(c.trim()).contents(), g = e(d);
                return {
                    locals: a,
                    element: d,
                    link: function(b) {
                        if (a.$scope = b, j) {
                            var c = f(j, a, !0);
                            o && angular.extend(c.instance, a);
                            var e = angular.isObject(c) ? c : c();
                            d.data("$ngControllerController", e), d.children().data("$ngControllerController", e), 
                            k && (b[k] = e);
                        }
                        return g.apply(null, arguments);
                    }
                };
            });
        };
        var j = {};
    }
    angular.module("mgcrea.ngStrap.tooltip", [ "mgcrea.ngStrap.core", "mgcrea.ngStrap.helpers.dimensions" ]).provider("$tooltip", function() {
        var a = this.defaults = {
            animation: "am-fade",
            customClass: "",
            prefixClass: "tooltip",
            prefixEvent: "tooltip",
            container: !1,
            target: !1,
            placement: "top",
            templateUrl: "tooltip/tooltip.tpl.html",
            template: "",
            contentTemplate: !1,
            trigger: "hover focus",
            keyboard: !1,
            html: !1,
            show: !1,
            title: "",
            type: "",
            delay: 0,
            autoClose: !1,
            bsEnabled: !0,
            viewport: {
                selector: "body",
                padding: 0
            }
        };
        this.$get = [ "$window", "$rootScope", "$bsCompiler", "$q", "$templateCache", "$http", "$animate", "$sce", "dimensions", "$$rAF", "$timeout", function(c, d, e, f, g, h, i, j, k, l, m) {
            function n(f, g) {
                function h() {
                    I.$emit(G.prefixEvent + ".show", F);
                }
                function n() {
                    if (I.$emit(G.prefixEvent + ".hide", F), O === S) {
                        if (R && "focus" === G.trigger) return f[0].blur();
                        E();
                    }
                }
                function s() {
                    var a = G.trigger.split(" ");
                    angular.forEach(a, function(a) {
                        "click" === a ? f.on("click", F.toggle) : "manual" !== a && (f.on("hover" === a ? "mouseenter" : "focus", F.enter), 
                        f.on("hover" === a ? "mouseleave" : "blur", F.leave), "button" === J && "hover" !== a && f.on(q ? "touchstart" : "mousedown", F.$onFocusElementMouseDown));
                    });
                }
                function t() {
                    for (var a = G.trigger.split(" "), b = a.length; b--; ) {
                        var c = a[b];
                        "click" === c ? f.off("click", F.toggle) : "manual" !== c && (f.off("hover" === c ? "mouseenter" : "focus", F.enter), 
                        f.off("hover" === c ? "mouseleave" : "blur", F.leave), "button" === J && "hover" !== c && f.off(q ? "touchstart" : "mousedown", F.$onFocusElementMouseDown));
                    }
                }
                function u() {
                    "focus" !== G.trigger ? O.on("keyup", F.$onKeyUp) : f.on("keyup", F.$onFocusKeyUp);
                }
                function v() {
                    "focus" !== G.trigger ? O.off("keyup", F.$onKeyUp) : f.off("keyup", F.$onFocusKeyUp);
                }
                function w() {
                    m(function() {
                        O.on("click", y), r.on("click", F.hide), T = !0;
                    }, 0, !1);
                }
                function x() {
                    T && (O.off("click", y), r.off("click", F.hide), T = !1);
                }
                function y(a) {
                    a.stopPropagation();
                }
                function z(a) {
                    a = a || G.target || f;
                    var d = a[0], e = "BODY" === d.tagName, g = d.getBoundingClientRect(), h = {};
                    for (var i in g) h[i] = g[i];
                    null === h.width && (h = angular.extend({}, h, {
                        width: g.right - g.left,
                        height: g.bottom - g.top
                    }));
                    var j = e ? {
                        top: 0,
                        left: 0
                    } : k.offset(d), l = {
                        scroll: e ? b.documentElement.scrollTop || b.body.scrollTop : a.prop("scrollTop") || 0
                    }, m = e ? {
                        width: b.documentElement.clientWidth,
                        height: c.innerHeight
                    } : null;
                    return angular.extend({}, h, l, m, j);
                }
                function A(a, b, c, d) {
                    var e, f = a.split("-");
                    switch (f[0]) {
                      case "right":
                        e = {
                            top: b.top + b.height / 2 - d / 2,
                            left: b.left + b.width
                        };
                        break;

                      case "bottom":
                        e = {
                            top: b.top + b.height,
                            left: b.left + b.width / 2 - c / 2
                        };
                        break;

                      case "left":
                        e = {
                            top: b.top + b.height / 2 - d / 2,
                            left: b.left - c
                        };
                        break;

                      default:
                        e = {
                            top: b.top - d,
                            left: b.left + b.width / 2 - c / 2
                        };
                    }
                    if (!f[1]) return e;
                    if ("top" === f[0] || "bottom" === f[0]) switch (f[1]) {
                      case "left":
                        e.left = b.left;
                        break;

                      case "right":
                        e.left = b.left + b.width - c;
                    } else if ("left" === f[0] || "right" === f[0]) switch (f[1]) {
                      case "top":
                        e.top = b.top - d + b.height;
                        break;

                      case "bottom":
                        e.top = b.top;
                    }
                    return e;
                }
                function B(a, b) {
                    var c = O[0], d = c.offsetWidth, e = c.offsetHeight, f = parseInt(k.css(c, "margin-top"), 10), g = parseInt(k.css(c, "margin-left"), 10);
                    isNaN(f) && (f = 0), isNaN(g) && (g = 0), a.top = a.top + f, a.left = a.left + g, 
                    k.setOffset(c, angular.extend({
                        using: function(a) {
                            O.css({
                                top: Math.round(a.top) + "px",
                                left: Math.round(a.left) + "px",
                                right: ""
                            });
                        }
                    }, a), 0);
                    var h = c.offsetWidth, i = c.offsetHeight;
                    if ("top" === b && i !== e && (a.top = a.top + e - i), !/top-left|top-right|bottom-left|bottom-right/.test(b)) {
                        var j = C(b, a, h, i);
                        if (j.left ? a.left += j.left : a.top += j.top, k.setOffset(c, a), /top|right|bottom|left/.test(b)) {
                            var l = /top|bottom/.test(b), m = l ? 2 * j.left - d + h : 2 * j.top - e + i, n = l ? "offsetWidth" : "offsetHeight";
                            D(m, c[n], l);
                        }
                    }
                }
                function C(a, b, c, d) {
                    var e = {
                        top: 0,
                        left: 0
                    };
                    if (!F.$viewport) return e;
                    var f = G.viewport && G.viewport.padding || 0, g = z(F.$viewport);
                    if (/right|left/.test(a)) {
                        var h = b.top - f - g.scroll, i = b.top + f - g.scroll + d;
                        h < g.top ? e.top = g.top - h : i > g.top + g.height && (e.top = g.top + g.height - i);
                    } else {
                        var j = b.left - f, k = b.left + f + c;
                        j < g.left ? e.left = g.left - j : k > g.right && (e.left = g.left + g.width - k);
                    }
                    return e;
                }
                function D(a, b, c) {
                    var d = p(".tooltip-arrow, .arrow", O[0]);
                    d.css(c ? "left" : "top", 50 * (1 - a / b) + "%").css(c ? "top" : "left", "");
                }
                function E() {
                    clearTimeout(L), F.$isShown && null !== O && (G.autoClose && x(), G.keyboard && v()), 
                    Q && (Q.$destroy(), Q = null), O && (O.remove(), O = F.$element = null);
                }
                var F = {}, G = F.$options = angular.extend({}, a, g), H = F.$promise = e.compile(G), I = F.$scope = G.scope && G.scope.$new() || d.$new(), J = f[0].nodeName.toLowerCase();
                if (G.delay && angular.isString(G.delay)) {
                    var K = G.delay.split(",").map(parseFloat);
                    G.delay = K.length > 1 ? {
                        show: K[0],
                        hide: K[1]
                    } : K[0];
                }
                F.$id = G.id || f.attr("id") || "", G.title && (I.title = j.trustAsHtml(G.title)), 
                I.$setEnabled = function(a) {
                    I.$$postDigest(function() {
                        F.setEnabled(a);
                    });
                }, I.$hide = function() {
                    I.$$postDigest(function() {
                        F.hide();
                    });
                }, I.$show = function() {
                    I.$$postDigest(function() {
                        F.show();
                    });
                }, I.$toggle = function() {
                    I.$$postDigest(function() {
                        F.toggle();
                    });
                }, F.$isShown = I.$isShown = !1;
                var L, M, N, O, P, Q;
                H.then(function(a) {
                    N = a, F.init();
                }), F.init = function() {
                    G.delay && angular.isNumber(G.delay) && (G.delay = {
                        show: G.delay,
                        hide: G.delay
                    }), "self" === G.container ? P = f : angular.isElement(G.container) ? P = G.container : G.container && (P = p(G.container)), 
                    s(), G.target && (G.target = angular.isElement(G.target) ? G.target : p(G.target)), 
                    G.show && I.$$postDigest(function() {
                        "focus" === G.trigger ? f[0].focus() : F.show();
                    });
                }, F.destroy = function() {
                    t(), E(), I.$destroy();
                }, F.enter = function() {
                    return clearTimeout(L), M = "in", G.delay && G.delay.show ? void (L = setTimeout(function() {
                        "in" === M && F.show();
                    }, G.delay.show)) : F.show();
                }, F.show = function() {
                    if (G.bsEnabled && !F.$isShown) {
                        I.$emit(G.prefixEvent + ".show.before", F);
                        var a, b;
                        G.container ? (a = P, b = P[0].lastChild ? angular.element(P[0].lastChild) : null) : (a = null, 
                        b = f), O && E(), Q = F.$scope.$new(), O = F.$element = N.link(Q, function(a, b) {}), 
                        O.css({
                            top: "-9999px",
                            left: "-9999px",
                            right: "auto",
                            display: "block",
                            visibility: "hidden"
                        }), G.animation && O.addClass(G.animation), G.type && O.addClass(G.prefixClass + "-" + G.type), 
                        G.customClass && O.addClass(G.customClass), b ? b.after(O) : a.prepend(O), F.$isShown = I.$isShown = !0, 
                        o(I), F.$applyPlacement(), angular.version.minor <= 2 ? i.enter(O, a, b, h) : i.enter(O, a, b).then(h), 
                        o(I), l(function() {
                            O && O.css({
                                visibility: "visible"
                            }), G.keyboard && ("focus" !== G.trigger && F.focus(), u());
                        }), G.autoClose && w();
                    }
                }, F.leave = function() {
                    return clearTimeout(L), M = "out", G.delay && G.delay.hide ? void (L = setTimeout(function() {
                        "out" === M && F.hide();
                    }, G.delay.hide)) : F.hide();
                };
                var R, S;
                F.hide = function(a) {
                    F.$isShown && (I.$emit(G.prefixEvent + ".hide.before", F), R = a, S = O, angular.version.minor <= 2 ? i.leave(O, n) : i.leave(O).then(n), 
                    F.$isShown = I.$isShown = !1, o(I), G.keyboard && null !== O && v(), G.autoClose && null !== O && x());
                }, F.toggle = function() {
                    F.$isShown ? F.leave() : F.enter();
                }, F.focus = function() {
                    O[0].focus();
                }, F.setEnabled = function(a) {
                    G.bsEnabled = a;
                }, F.setViewport = function(a) {
                    G.viewport = a;
                }, F.$applyPlacement = function() {
                    if (O) {
                        var b = G.placement, c = /\s?auto?\s?/i, d = c.test(b);
                        d && (b = b.replace(c, "") || a.placement), O.addClass(G.placement);
                        var e = z(), f = O.prop("offsetWidth"), g = O.prop("offsetHeight");
                        if (F.$viewport = G.viewport && p(G.viewport.selector || G.viewport), d) {
                            var h = b, i = z(F.$viewport);
                            /top/.test(h) && e.bottom + g > i.bottom ? b = h.replace("top", "bottom") : /bottom/.test(h) && e.top - g < i.top && (b = h.replace("bottom", "top")), 
                            /left/.test(h) && e.left - f < i.left ? b = b.replace("left", "right") : /right/.test(h) && e.right + f > i.width && (b = b.replace("right", "left")), 
                            O.removeClass(h).addClass(b);
                        }
                        var j = A(b, e, f, g);
                        B(j, b);
                    }
                }, F.$onKeyUp = function(a) {
                    27 === a.which && F.$isShown && (F.hide(), a.stopPropagation());
                }, F.$onFocusKeyUp = function(a) {
                    27 === a.which && (f[0].blur(), a.stopPropagation());
                }, F.$onFocusElementMouseDown = function(a) {
                    a.preventDefault(), a.stopPropagation(), F.$isShown ? f[0].blur() : f[0].focus();
                };
                var T = !1;
                return F;
            }
            function o(a) {
                a.$$phase || a.$root && a.$root.$$phase || a.$digest();
            }
            function p(a, c) {
                return angular.element((c || b).querySelectorAll(a));
            }
            var q = (String.prototype.trim, "createTouch" in c.document), r = angular.element(c.document);
            return n;
        } ];
    }).directive("bsTooltip", [ "$window", "$location", "$sce", "$tooltip", "$$rAF", function(a, b, c, d, e) {
        return {
            restrict: "EAC",
            scope: !0,
            link: function(a, b, f, g) {
                var h = {
                    scope: a
                };
                angular.forEach([ "template", "templateUrl", "controller", "controllerAs", "contentTemplate", "placement", "container", "delay", "trigger", "html", "animation", "backdropAnimation", "type", "customClass", "id" ], function(a) {
                    angular.isDefined(f[a]) && (h[a] = f[a]);
                });
                var i = /^(false|0|)$/i;
                angular.forEach([ "html", "container" ], function(a) {
                    angular.isDefined(f[a]) && i.test(f[a]) && (h[a] = !1);
                });
                var j = b.attr("data-target");
                angular.isDefined(j) && (i.test(j) ? h.target = !1 : h.target = j), a.hasOwnProperty("title") || (a.title = ""), 
                f.$observe("title", function(b) {
                    if (angular.isDefined(b) || !a.hasOwnProperty("title")) {
                        var d = a.title;
                        a.title = c.trustAsHtml(b), angular.isDefined(d) && e(function() {
                            k && k.$applyPlacement();
                        });
                    }
                }), f.bsTooltip && a.$watch(f.bsTooltip, function(b, c) {
                    angular.isObject(b) ? angular.extend(a, b) : a.title = b, angular.isDefined(c) && e(function() {
                        k && k.$applyPlacement();
                    });
                }, !0), f.bsShow && a.$watch(f.bsShow, function(a, b) {
                    k && angular.isDefined(a) && (angular.isString(a) && (a = !!a.match(/true|,?(tooltip),?/i)), 
                    a === !0 ? k.show() : k.hide());
                }), f.bsEnabled && a.$watch(f.bsEnabled, function(a, b) {
                    k && angular.isDefined(a) && (angular.isString(a) && (a = !!a.match(/true|1|,?(tooltip),?/i)), 
                    a === !1 ? k.setEnabled(!1) : k.setEnabled(!0));
                }), f.viewport && a.$watch(f.viewport, function(a) {
                    k && angular.isDefined(a) && k.setViewport(a);
                });
                var k = d(b, h);
                a.$on("$destroy", function() {
                    k && k.destroy(), h = null, k = null;
                });
            }
        };
    } ]), angular.module("mgcrea.ngStrap.typeahead", [ "mgcrea.ngStrap.tooltip", "mgcrea.ngStrap.helpers.parseOptions" ]).provider("$typeahead", function() {
        var a = this.defaults = {
            animation: "am-fade",
            prefixClass: "typeahead",
            prefixEvent: "$typeahead",
            placement: "bottom-left",
            templateUrl: "typeahead/typeahead.tpl.html",
            trigger: "focus",
            container: !1,
            keyboard: !0,
            html: !1,
            delay: 0,
            minLength: 1,
            filter: "bsAsyncFilter",
            limit: 6,
            autoSelect: !1,
            comparator: "",
            trimValue: !0
        };
        this.$get = [ "$window", "$rootScope", "$tooltip", "$$rAF", "$timeout", function(b, c, d, e, f) {
            function g(b, c, g) {
                var i = {}, j = angular.extend({}, a, g);
                i = d(b, j);
                var k = g.scope, l = i.$scope;
                l.$resetMatches = function() {
                    l.$matches = [], l.$activeIndex = j.autoSelect ? 0 : -1;
                }, l.$resetMatches(), l.$activate = function(a) {
                    l.$$postDigest(function() {
                        i.activate(a);
                    });
                }, l.$select = function(a, b) {
                    l.$$postDigest(function() {
                        i.select(a);
                    });
                }, l.$isVisible = function() {
                    return i.$isVisible();
                }, i.update = function(a) {
                    l.$matches = a, l.$activeIndex >= a.length && (l.$activeIndex = j.autoSelect ? 0 : -1), 
                    h(l), e(i.$applyPlacement);
                }, i.activate = function(a) {
                    l.$activeIndex = a;
                }, i.select = function(a) {
                    if (-1 !== a) {
                        var b = l.$matches[a].value;
                        c.$setViewValue(b), c.$render(), l.$resetMatches(), k && k.$digest(), l.$emit(j.prefixEvent + ".select", b, a, i);
                    }
                }, i.$isVisible = function() {
                    return j.minLength && c ? l.$matches.length && angular.isString(c.$viewValue) && c.$viewValue.length >= j.minLength : !!l.$matches.length;
                }, i.$getIndex = function(a) {
                    var b = l.$matches.length, c = b;
                    if (b) {
                        for (c = b; c-- && l.$matches[c].value !== a; ) ;
                        if (!(0 > c)) return c;
                    }
                }, i.$onMouseDown = function(a) {
                    a.preventDefault(), a.stopPropagation();
                }, i.$onKeyDown = function(a) {
                    /(38|40|13)/.test(a.keyCode) && (!i.$isVisible() || 13 === a.keyCode && -1 === l.$activeIndex || (a.preventDefault(), 
                    a.stopPropagation()), 13 === a.keyCode && l.$matches.length ? i.select(l.$activeIndex) : 38 === a.keyCode && l.$activeIndex > 0 ? l.$activeIndex-- : 40 === a.keyCode && l.$activeIndex < l.$matches.length - 1 ? l.$activeIndex++ : angular.isUndefined(l.$activeIndex) && (l.$activeIndex = 0), 
                    l.$digest());
                };
                var m = i.show;
                i.show = function() {
                    m(), f(function() {
                        i.$element && i.$element.on("mousedown", i.$onMouseDown), j.keyboard && b && b.on("keydown", i.$onKeyDown);
                    }, 0, !1);
                };
                var n = i.hide;
                return i.hide = function() {
                    i.$element && i.$element.off("mousedown", i.$onMouseDown), j.keyboard && b && b.off("keydown", i.$onKeyDown), 
                    j.autoSelect || i.activate(-1), n();
                }, i;
            }
            function h(a) {
                a.$$phase || a.$root && a.$root.$$phase || a.$digest();
            }
            angular.element(b.document.body);
            return g.defaults = a, g;
        } ];
    }).filter("bsAsyncFilter", [ "$filter", function(a) {
        return function(b, c, d) {
            return b && angular.isFunction(b.then) ? b.then(function(b) {
                return a("filter")(b, c, d);
            }) : a("filter")(b, c, d);
        };
    } ]).directive("bsTypeahead", [ "$window", "$parse", "$q", "$typeahead", "$parseOptions", function(a, b, c, d, e) {
        var f = d.defaults;
        return {
            restrict: "EAC",
            require: "ngModel",
            link: function(a, b, c, g) {
                var h = {
                    scope: a
                };
                angular.forEach([ "template", "templateUrl", "controller", "controllerAs", "placement", "container", "delay", "trigger", "keyboard", "html", "animation", "filter", "limit", "minLength", "watchOptions", "selectMode", "autoSelect", "comparator", "id", "prefixEvent", "prefixClass" ], function(a) {
                    angular.isDefined(c[a]) && (h[a] = c[a]);
                });
                var i = /^(false|0|)$/i;
                angular.forEach([ "html", "container", "trimValue" ], function(a) {
                    angular.isDefined(c[a]) && i.test(c[a]) && (h[a] = !1);
                }), b.attr("autocomplete") || b.attr("autocomplete", "off");
                var j = h.filter || f.filter, k = h.limit || f.limit, l = h.comparator || f.comparator, m = c.bsOptions;
                j && (m += " | " + j + ":$viewValue"), l && (m += ":" + l), k && (m += " | limitTo:" + k);
                var n = e(m), o = d(b, g, h);
                if (h.watchOptions) {
                    var p = n.$match[7].replace(/\|.+/, "").replace(/\(.*\)/g, "").trim();
                    a.$watchCollection(p, function(b, c) {
                        n.valuesFn(a, g).then(function(a) {
                            o.update(a), g.$render();
                        });
                    });
                }
                a.$watch(c.ngModel, function(b, c) {
                    a.$modelValue = b, n.valuesFn(a, g).then(function(a) {
                        return h.selectMode && !a.length && b.length > 0 ? void g.$setViewValue(g.$viewValue.substring(0, g.$viewValue.length - 1)) : (a.length > k && (a = a.slice(0, k)), 
                        o.update(a), void g.$render());
                    });
                }), g.$formatters.push(function(a) {
                    var b = n.displayValue(a);
                    return b ? b : a && "object" != typeof a ? a : "";
                }), g.$render = function() {
                    if (g.$isEmpty(g.$viewValue)) return b.val("");
                    var a = o.$getIndex(g.$modelValue), c = angular.isDefined(a) ? o.$scope.$matches[a].label : g.$viewValue;
                    c = angular.isObject(c) ? n.displayValue(c) : c;
                    var d = c ? c.toString().replace(/<(?:.|\n)*?>/gm, "") : "";
                    b.val(h.trimValue === !1 ? d : d.trim());
                }, a.$on("$destroy", function() {
                    o && o.destroy(), h = null, o = null;
                });
            }
        };
    } ]), angular.module("mgcrea.ngStrap.tab", []).provider("$tab", function() {
        var a = this.defaults = {
            animation: "am-fade",
            template: "tab/tab.tpl.html",
            navClass: "nav-tabs",
            activeClass: "active"
        }, b = this.controller = function(b, c, d) {
            var e = this;
            e.$options = angular.copy(a), angular.forEach([ "animation", "navClass", "activeClass" ], function(a) {
                angular.isDefined(d[a]) && (e.$options[a] = d[a]);
            }), b.$navClass = e.$options.navClass, b.$activeClass = e.$options.activeClass, 
            e.$panes = b.$panes = [], e.$activePaneChangeListeners = e.$viewChangeListeners = [], 
            e.$push = function(a) {
                angular.isUndefined(e.$panes.$active) && b.$setActive(a.name || 0), e.$panes.push(a);
            }, e.$remove = function(a) {
                var b, c = e.$panes.indexOf(a), d = e.$panes.$active;
                b = angular.isString(d) ? e.$panes.map(function(a) {
                    return a.name;
                }).indexOf(d) : e.$panes.$active, e.$panes.splice(c, 1), b > c ? b-- : c === b && b === e.$panes.length && b--, 
                b >= 0 && b < e.$panes.length ? e.$setActive(e.$panes[b].name || b) : e.$setActive();
            }, e.$setActive = b.$setActive = function(a) {
                e.$panes.$active = a, e.$activePaneChangeListeners.forEach(function(a) {
                    a();
                });
            }, e.$isActive = b.$isActive = function(a, b) {
                return e.$panes.$active === a.name || e.$panes.$active === b;
            };
        };
        this.$get = function() {
            var c = {};
            return c.defaults = a, c.controller = b, c;
        };
    }).directive("bsTabs", [ "$window", "$animate", "$tab", "$parse", function(a, b, c, d) {
        var e = c.defaults;
        return {
            require: [ "?ngModel", "bsTabs" ],
            transclude: !0,
            scope: !0,
            controller: [ "$scope", "$element", "$attrs", c.controller ],
            templateUrl: function(a, b) {
                return b.template || e.template;
            },
            link: function(a, b, c, e) {
                var f = e[0], g = e[1];
                if (f && (g.$activePaneChangeListeners.push(function() {
                    f.$setViewValue(g.$panes.$active);
                }), f.$formatters.push(function(a) {
                    return g.$setActive(a), a;
                })), c.bsActivePane) {
                    var h = d(c.bsActivePane);
                    g.$activePaneChangeListeners.push(function() {
                        h.assign(a, g.$panes.$active);
                    }), a.$watch(c.bsActivePane, function(a, b) {
                        g.$setActive(a);
                    }, !0);
                }
            }
        };
    } ]).directive("bsPane", [ "$window", "$animate", "$sce", function(a, b, c) {
        return {
            require: [ "^?ngModel", "^bsTabs" ],
            scope: !0,
            link: function(a, d, e, f) {
                function g() {
                    var c = h.$panes.indexOf(a);
                    b[h.$isActive(a, c) ? "addClass" : "removeClass"](d, h.$options.activeClass);
                }
                var h = (f[0], f[1]);
                d.addClass("tab-pane"), e.$observe("title", function(b, d) {
                    a.title = c.trustAsHtml(b);
                }), a.name = e.name, h.$options.animation && d.addClass(h.$options.animation), e.$observe("disabled", function(b, c) {
                    a.disabled = a.$eval(b);
                }), h.$push(a), a.$on("$destroy", function() {
                    h.$remove(a);
                }), h.$activePaneChangeListeners.push(function() {
                    g();
                }), g();
            }
        };
    } ]), angular.module("mgcrea.ngStrap.timepicker", [ "mgcrea.ngStrap.helpers.dateParser", "mgcrea.ngStrap.helpers.dateFormatter", "mgcrea.ngStrap.tooltip" ]).provider("$timepicker", function() {
        var a = this.defaults = {
            animation: "am-fade",
            prefixClass: "timepicker",
            placement: "bottom-left",
            templateUrl: "timepicker/timepicker.tpl.html",
            trigger: "focus",
            container: !1,
            keyboard: !0,
            html: !1,
            delay: 0,
            useNative: !0,
            timeType: "date",
            timeFormat: "shortTime",
            timezone: null,
            modelTimeFormat: null,
            autoclose: !1,
            minTime: -(1 / 0),
            maxTime: +(1 / 0),
            length: 5,
            hourStep: 1,
            minuteStep: 5,
            secondStep: 5,
            roundDisplay: !1,
            iconUp: "glyphicon glyphicon-chevron-up",
            iconDown: "glyphicon glyphicon-chevron-down",
            arrowBehavior: "pager"
        };
        this.$get = [ "$window", "$document", "$rootScope", "$sce", "$dateFormatter", "$tooltip", "$timeout", function(b, c, d, e, f, g, h) {
            function i(b, c, d) {
                function e(a) {
                    var b = 6e4 * o.minuteStep;
                    return new Date(Math.floor(a.getTime() / b) * b);
                }
                function i(a, c) {
                    var d = a + c;
                    if (b[0].createTextRange) {
                        var e = b[0].createTextRange();
                        e.collapse(!0), e.moveStart("character", a), e.moveEnd("character", d), e.select();
                    } else b[0].setSelectionRange ? b[0].setSelectionRange(a, d) : angular.isUndefined(b[0].selectionStart) && (b[0].selectionStart = a, 
                    b[0].selectionEnd = d);
                }
                function l() {
                    b[0].focus();
                }
                var m = g(b, angular.extend({}, a, d)), n = d.scope, o = m.$options, p = m.$scope, q = o.lang, r = function(a, b, c) {
                    return f.formatDate(a, b, q, c);
                }, s = 0, t = o.roundDisplay ? e(new Date()) : new Date(), u = c.$dateValue || t, v = {
                    hour: u.getHours(),
                    meridian: u.getHours() < 12,
                    minute: u.getMinutes(),
                    second: u.getSeconds(),
                    millisecond: u.getMilliseconds()
                }, w = f.getDatetimeFormat(o.timeFormat, q), x = f.hoursFormat(w), y = f.timeSeparator(w), z = f.minutesFormat(w), A = f.secondsFormat(w), B = f.showSeconds(w), C = f.showAM(w);
                p.$iconUp = o.iconUp, p.$iconDown = o.iconDown, p.$select = function(a, b) {
                    m.select(a, b);
                }, p.$moveIndex = function(a, b) {
                    m.$moveIndex(a, b);
                }, p.$switchMeridian = function(a) {
                    m.switchMeridian(a);
                }, m.update = function(a) {
                    angular.isDate(a) && !isNaN(a.getTime()) ? (m.$date = a, angular.extend(v, {
                        hour: a.getHours(),
                        minute: a.getMinutes(),
                        second: a.getSeconds(),
                        millisecond: a.getMilliseconds()
                    }), m.$build()) : m.$isBuilt || m.$build();
                }, m.select = function(a, b, d) {
                    (!c.$dateValue || isNaN(c.$dateValue.getTime())) && (c.$dateValue = new Date(1970, 0, 1)), 
                    angular.isDate(a) || (a = new Date(a)), 0 === b ? c.$dateValue.setHours(a.getHours()) : 1 === b ? c.$dateValue.setMinutes(a.getMinutes()) : 2 === b && c.$dateValue.setSeconds(a.getSeconds()), 
                    c.$setViewValue(angular.copy(c.$dateValue)), c.$render(), o.autoclose && !d && h(function() {
                        m.hide(!0);
                    });
                }, m.switchMeridian = function(a) {
                    if (c.$dateValue && !isNaN(c.$dateValue.getTime())) {
                        var b = (a || c.$dateValue).getHours();
                        c.$dateValue.setHours(12 > b ? b + 12 : b - 12), c.$setViewValue(angular.copy(c.$dateValue)), 
                        c.$render();
                    }
                }, m.$build = function() {
                    var a, b, c = p.midIndex = parseInt(o.length / 2, 10), d = [];
                    for (a = 0; a < o.length; a++) b = new Date(1970, 0, 1, v.hour - (c - a) * o.hourStep), 
                    d.push({
                        date: b,
                        label: r(b, x),
                        selected: m.$date && m.$isSelected(b, 0),
                        disabled: m.$isDisabled(b, 0)
                    });
                    var e, f = [];
                    for (a = 0; a < o.length; a++) e = new Date(1970, 0, 1, 0, v.minute - (c - a) * o.minuteStep), 
                    f.push({
                        date: e,
                        label: r(e, z),
                        selected: m.$date && m.$isSelected(e, 1),
                        disabled: m.$isDisabled(e, 1)
                    });
                    var g, h = [];
                    for (a = 0; a < o.length; a++) g = new Date(1970, 0, 1, 0, 0, v.second - (c - a) * o.secondStep), 
                    h.push({
                        date: g,
                        label: r(g, A),
                        selected: m.$date && m.$isSelected(g, 2),
                        disabled: m.$isDisabled(g, 2)
                    });
                    var i = [];
                    for (a = 0; a < o.length; a++) B ? i.push([ d[a], f[a], h[a] ]) : i.push([ d[a], f[a] ]);
                    p.rows = i, p.showSeconds = B, p.showAM = C, p.isAM = (m.$date || d[c].date).getHours() < 12, 
                    p.timeSeparator = y, m.$isBuilt = !0;
                }, m.$isSelected = function(a, b) {
                    return m.$date ? 0 === b ? a.getHours() === m.$date.getHours() : 1 === b ? a.getMinutes() === m.$date.getMinutes() : 2 === b ? a.getSeconds() === m.$date.getSeconds() : void 0 : !1;
                }, m.$isDisabled = function(a, b) {
                    var c;
                    return 0 === b ? c = a.getTime() + 6e4 * v.minute + 1e3 * v.second : 1 === b ? c = a.getTime() + 36e5 * v.hour + 1e3 * v.second : 2 === b && (c = a.getTime() + 36e5 * v.hour + 6e4 * v.minute), 
                    c < 1 * o.minTime || c > 1 * o.maxTime;
                }, p.$arrowAction = function(a, b) {
                    "picker" === o.arrowBehavior ? m.$setTimeByStep(a, b) : m.$moveIndex(a, b);
                }, m.$setTimeByStep = function(a, b) {
                    var c = new Date(m.$date || u), d = c.getHours(), e = c.getMinutes(), f = c.getSeconds();
                    0 === b ? c.setHours(d - parseInt(o.hourStep, 10) * a) : 1 === b ? c.setMinutes(e - parseInt(o.minuteStep, 10) * a) : 2 === b && c.setSeconds(f - parseInt(o.secondStep, 10) * a), 
                    m.select(c, b, !0);
                }, m.$moveIndex = function(a, b) {
                    var c;
                    0 === b ? (c = new Date(1970, 0, 1, v.hour + a * o.length, v.minute, v.second), 
                    angular.extend(v, {
                        hour: c.getHours()
                    })) : 1 === b ? (c = new Date(1970, 0, 1, v.hour, v.minute + a * o.length * o.minuteStep, v.second), 
                    angular.extend(v, {
                        minute: c.getMinutes()
                    })) : 2 === b && (c = new Date(1970, 0, 1, v.hour, v.minute, v.second + a * o.length * o.secondStep), 
                    angular.extend(v, {
                        second: c.getSeconds()
                    })), m.$build();
                }, m.$onMouseDown = function(a) {
                    if ("input" !== a.target.nodeName.toLowerCase() && a.preventDefault(), a.stopPropagation(), 
                    k) {
                        var b = angular.element(a.target);
                        "button" !== b[0].nodeName.toLowerCase() && (b = b.parent()), b.triggerHandler("click");
                    }
                }, m.$onKeyDown = function(a) {
                    if (/(38|37|39|40|13)/.test(a.keyCode) && !a.shiftKey && !a.altKey) {
                        if (a.preventDefault(), a.stopPropagation(), 13 === a.keyCode) return void m.hide(!0);
                        var b = new Date(m.$date), c = b.getHours(), d = r(b, x).length, e = b.getMinutes(), f = r(b, z).length, g = b.getSeconds(), h = r(b, A).length, j = 1, k = /(37|39)/.test(a.keyCode), l = 2 + 1 * B + 1 * C;
                        k && (37 === a.keyCode ? s = 1 > s ? l - 1 : s - 1 : 39 === a.keyCode && (s = l - 1 > s ? s + 1 : 0));
                        var p = [ 0, d ], q = 0;
                        38 === a.keyCode && (q = -1), 40 === a.keyCode && (q = 1);
                        var t = 2 === s && B, u = 2 === s && !B || 3 === s && B;
                        0 === s ? (b.setHours(c + q * parseInt(o.hourStep, 10)), d = r(b, x).length, p = [ 0, d ]) : 1 === s ? (b.setMinutes(e + q * parseInt(o.minuteStep, 10)), 
                        f = r(b, z).length, p = [ d + j, f ]) : t ? (b.setSeconds(g + q * parseInt(o.secondStep, 10)), 
                        h = r(b, A).length, p = [ d + j + f + j, h ]) : u && (k || m.switchMeridian(), p = [ d + j + f + j + (h + j) * B, 2 ]), 
                        m.select(b, s, !0), i(p[0], p[1]), n.$digest();
                    }
                };
                var D = m.init;
                m.init = function() {
                    return j && o.useNative ? (b.prop("type", "time"), void b.css("-webkit-appearance", "textfield")) : (k && (b.prop("type", "text"), 
                    b.attr("readonly", "true"), b.on("click", l)), void D());
                };
                var E = m.destroy;
                m.destroy = function() {
                    j && o.useNative && b.off("click", l), E();
                };
                var F = m.show;
                m.show = function() {
                    !k && b.attr("readonly") || b.attr("disabled") || (F(), h(function() {
                        m.$element && m.$element.on(k ? "touchstart" : "mousedown", m.$onMouseDown), o.keyboard && b && b.on("keydown", m.$onKeyDown);
                    }, 0, !1));
                };
                var G = m.hide;
                return m.hide = function(a) {
                    m.$isShown && (m.$element && m.$element.off(k ? "touchstart" : "mousedown", m.$onMouseDown), 
                    o.keyboard && b && b.off("keydown", m.$onKeyDown), G(a));
                }, m;
            }
            var j = /(ip(a|o)d|iphone|android)/gi.test(b.navigator.userAgent), k = "createTouch" in b.document && j;
            return a.lang || (a.lang = f.getDefaultLocale()), i.defaults = a, i;
        } ];
    }).directive("bsTimepicker", [ "$window", "$parse", "$q", "$dateFormatter", "$dateParser", "$timepicker", function(a, b, d, e, f, g) {
        var h = g.defaults, i = /(ip(a|o)d|iphone|android)/gi.test(a.navigator.userAgent);
        return {
            restrict: "EAC",
            require: "ngModel",
            link: function(a, b, d, j) {
                function k(a) {
                    if (angular.isDate(a)) {
                        var b = isNaN(m.minTime) || new Date(a.getTime()).setFullYear(1970, 0, 1) >= m.minTime, c = isNaN(m.maxTime) || new Date(a.getTime()).setFullYear(1970, 0, 1) <= m.maxTime, d = b && c;
                        j.$setValidity("date", d), j.$setValidity("min", b), j.$setValidity("max", c), d && (j.$dateValue = a);
                    }
                }
                function l() {
                    return !j.$dateValue || isNaN(j.$dateValue.getTime()) ? "" : q(j.$dateValue, m.timeFormat);
                }
                var m = {
                    scope: a
                };
                angular.forEach([ "template", "templateUrl", "controller", "controllerAs", "placement", "container", "delay", "trigger", "keyboard", "html", "animation", "autoclose", "timeType", "timeFormat", "timezone", "modelTimeFormat", "useNative", "hourStep", "minuteStep", "secondStep", "length", "arrowBehavior", "iconUp", "iconDown", "roundDisplay", "id", "prefixClass", "prefixEvent" ], function(a) {
                    angular.isDefined(d[a]) && (m[a] = d[a]);
                });
                var n = /^(false|0|)$/i;
                angular.forEach([ "html", "container", "autoclose", "useNative", "roundDisplay" ], function(a) {
                    angular.isDefined(d[a]) && n.test(d[a]) && (m[a] = !1);
                }), d.bsShow && a.$watch(d.bsShow, function(a, b) {
                    o && angular.isDefined(a) && (angular.isString(a) && (a = !!a.match(/true|,?(timepicker),?/i)), 
                    a === !0 ? o.show() : o.hide());
                }), i && (m.useNative || h.useNative) && (m.timeFormat = "HH:mm");
                var o = g(b, j, m);
                m = o.$options;
                var p = m.lang, q = function(a, b, c) {
                    return e.formatDate(a, b, p, c);
                }, r = f({
                    format: m.timeFormat,
                    lang: p
                });
                angular.forEach([ "minTime", "maxTime" ], function(a) {
                    angular.isDefined(d[a]) && d.$observe(a, function(b) {
                        o.$options[a] = r.getTimeForAttribute(a, b), !isNaN(o.$options[a]) && o.$build(), 
                        k(j.$dateValue);
                    });
                }), a.$watch(d.ngModel, function(a, b) {
                    o.update(j.$dateValue);
                }, !0), j.$parsers.unshift(function(a) {
                    var b;
                    if (!a) return j.$setValidity("date", !0), null;
                    var d = angular.isDate(a) ? a : r.parse(a, j.$dateValue);
                    return !d || isNaN(d.getTime()) ? (j.$setValidity("date", !1), c) : (k(d), "string" === m.timeType ? (b = r.timezoneOffsetAdjust(d, m.timezone, !0), 
                    q(b, m.modelTimeFormat || m.timeFormat)) : (b = r.timezoneOffsetAdjust(j.$dateValue, m.timezone, !0), 
                    "number" === m.timeType ? b.getTime() : "unix" === m.timeType ? b.getTime() / 1e3 : "iso" === m.timeType ? b.toISOString() : new Date(b)));
                }), j.$formatters.push(function(a) {
                    var b;
                    return b = angular.isUndefined(a) || null === a ? NaN : angular.isDate(a) ? a : "string" === m.timeType ? r.parse(a, null, m.modelTimeFormat) : "unix" === m.timeType ? new Date(1e3 * a) : new Date(a), 
                    j.$dateValue = r.timezoneOffsetAdjust(b, m.timezone), l();
                }), j.$render = function() {
                    b.val(l());
                }, a.$on("$destroy", function() {
                    o && o.destroy(), m = null, o = null;
                });
            }
        };
    } ]), angular.module("mgcrea.ngStrap.scrollspy", [ "mgcrea.ngStrap.helpers.debounce", "mgcrea.ngStrap.helpers.dimensions" ]).provider("$scrollspy", function() {
        var a = this.$$spies = {}, c = this.defaults = {
            debounce: 150,
            throttle: 100,
            offset: 100
        };
        this.$get = [ "$window", "$document", "$rootScope", "dimensions", "debounce", "throttle", function(d, e, f, g, h, i) {
            function j(a, b) {
                return a[0].nodeName && a[0].nodeName.toLowerCase() === b.toLowerCase();
            }
            function k(e) {
                var k = angular.extend({}, c, e);
                k.element || (k.element = n);
                var o = j(k.element, "body"), p = o ? l : k.element, q = o ? "window" : k.id;
                if (a[q]) return a[q].$$count++, a[q];
                var r, s, t, u, v, w, x, y, z = {}, A = z.$trackedElements = [], B = [];
                return z.init = function() {
                    this.$$count = 1, u = h(this.checkPosition, k.debounce), v = i(this.checkPosition, k.throttle), 
                    p.on("click", this.checkPositionWithEventLoop), l.on("resize", u), p.on("scroll", v), 
                    w = h(this.checkOffsets, k.debounce), r = f.$on("$viewContentLoaded", w), s = f.$on("$includeContentLoaded", w), 
                    w(), q && (a[q] = z);
                }, z.destroy = function() {
                    this.$$count--, this.$$count > 0 || (p.off("click", this.checkPositionWithEventLoop), 
                    l.off("resize", u), p.off("scroll", v), r(), s(), q && delete a[q]);
                }, z.checkPosition = function() {
                    if (B.length) {
                        if (y = (o ? d.pageYOffset : p.prop("scrollTop")) || 0, x = Math.max(d.innerHeight, m.prop("clientHeight")), 
                        y < B[0].offsetTop && t !== B[0].target) return z.$activateElement(B[0]);
                        for (var a = B.length; a--; ) if (!angular.isUndefined(B[a].offsetTop) && null !== B[a].offsetTop && t !== B[a].target && !(y < B[a].offsetTop || B[a + 1] && y > B[a + 1].offsetTop)) return z.$activateElement(B[a]);
                    }
                }, z.checkPositionWithEventLoop = function() {
                    setTimeout(z.checkPosition, 1);
                }, z.$activateElement = function(a) {
                    if (t) {
                        var b = z.$getTrackedElement(t);
                        b && (b.source.removeClass("active"), j(b.source, "li") && j(b.source.parent().parent(), "li") && b.source.parent().parent().removeClass("active"));
                    }
                    t = a.target, a.source.addClass("active"), j(a.source, "li") && j(a.source.parent().parent(), "li") && a.source.parent().parent().addClass("active");
                }, z.$getTrackedElement = function(a) {
                    return A.filter(function(b) {
                        return b.target === a;
                    })[0];
                }, z.checkOffsets = function() {
                    angular.forEach(A, function(a) {
                        var c = b.querySelector(a.target);
                        a.offsetTop = c ? g.offset(c).top : null, k.offset && null !== a.offsetTop && (a.offsetTop -= 1 * k.offset);
                    }), B = A.filter(function(a) {
                        return null !== a.offsetTop;
                    }).sort(function(a, b) {
                        return a.offsetTop - b.offsetTop;
                    }), u();
                }, z.trackElement = function(a, b) {
                    A.push({
                        target: a,
                        source: b
                    });
                }, z.untrackElement = function(a, b) {
                    for (var c, d = A.length; d--; ) if (A[d].target === a && A[d].source === b) {
                        c = d;
                        break;
                    }
                    A = A.splice(c, 1);
                }, z.activate = function(a) {
                    A[a].addClass("active");
                }, z.init(), z;
            }
            var l = angular.element(d), m = angular.element(e.prop("documentElement")), n = angular.element(d.document.body);
            return k;
        } ];
    }).directive("bsScrollspy", [ "$rootScope", "debounce", "dimensions", "$scrollspy", function(a, b, c, d) {
        return {
            restrict: "EAC",
            link: function(a, b, c) {
                var e = {
                    scope: a
                };
                angular.forEach([ "offset", "target" ], function(a) {
                    angular.isDefined(c[a]) && (e[a] = c[a]);
                });
                var f = d(e);
                f.trackElement(e.target, b), a.$on("$destroy", function() {
                    f && (f.untrackElement(e.target, b), f.destroy()), e = null, f = null;
                });
            }
        };
    } ]).directive("bsScrollspyList", [ "$rootScope", "debounce", "dimensions", "$scrollspy", function(a, b, c, d) {
        return {
            restrict: "A",
            compile: function(a, b) {
                var c = a[0].querySelectorAll("li > a[href]");
                angular.forEach(c, function(a) {
                    var b = angular.element(a);
                    b.parent().attr("bs-scrollspy", "").attr("data-target", b.attr("href"));
                });
            }
        };
    } ]), angular.module("mgcrea.ngStrap.select", [ "mgcrea.ngStrap.tooltip", "mgcrea.ngStrap.helpers.parseOptions" ]).provider("$select", function() {
        var a = this.defaults = {
            animation: "am-fade",
            prefixClass: "select",
            prefixEvent: "$select",
            placement: "bottom-left",
            templateUrl: "select/select.tpl.html",
            trigger: "focus",
            container: !1,
            keyboard: !0,
            html: !1,
            delay: 0,
            multiple: !1,
            allNoneButtons: !1,
            sort: !0,
            caretHtml: '&nbsp;<span class="caret"></span>',
            placeholder: "Choose among the following...",
            allText: "All",
            noneText: "None",
            maxLength: 3,
            maxLengthHtml: "selected",
            iconCheckmark: "glyphicon glyphicon-ok"
        };
        this.$get = [ "$window", "$document", "$rootScope", "$tooltip", "$timeout", function(b, c, d, e, f) {
            function g(d, g, h) {
                var j = {}, k = angular.extend({}, a, h);
                j = e(d, k);
                var l = j.$scope;
                l.$matches = [], k.multiple ? l.$activeIndex = [] : l.$activeIndex = -1, l.$isMultiple = k.multiple, 
                l.$showAllNoneButtons = k.allNoneButtons && k.multiple, l.$iconCheckmark = k.iconCheckmark, 
                l.$allText = k.allText, l.$noneText = k.noneText, l.$activate = function(a) {
                    l.$$postDigest(function() {
                        j.activate(a);
                    });
                }, l.$select = function(a, b) {
                    l.$$postDigest(function() {
                        j.select(a);
                    });
                }, l.$isVisible = function() {
                    return j.$isVisible();
                }, l.$isActive = function(a) {
                    return j.$isActive(a);
                }, l.$selectAll = function() {
                    for (var a = 0; a < l.$matches.length; a++) l.$isActive(a) || l.$select(a);
                }, l.$selectNone = function() {
                    for (var a = 0; a < l.$matches.length; a++) l.$isActive(a) && l.$select(a);
                }, j.update = function(a) {
                    l.$matches = a, j.$updateActiveIndex();
                }, j.activate = function(a) {
                    return k.multiple ? (j.$isActive(a) ? l.$activeIndex.splice(l.$activeIndex.indexOf(a), 1) : l.$activeIndex.push(a), 
                    k.sort && l.$activeIndex.sort(function(a, b) {
                        return a - b;
                    })) : l.$activeIndex = a, l.$activeIndex;
                }, j.select = function(a) {
                    var b = l.$matches[a].value;
                    l.$apply(function() {
                        j.activate(a), k.multiple ? g.$setViewValue(l.$activeIndex.map(function(a) {
                            return angular.isUndefined(l.$matches[a]) ? null : l.$matches[a].value;
                        })) : (g.$setViewValue(b), j.hide());
                    }), l.$emit(k.prefixEvent + ".select", b, a, j);
                }, j.$updateActiveIndex = function() {
                    k.multiple ? angular.isArray(g.$modelValue) ? l.$activeIndex = g.$modelValue.map(function(a) {
                        return j.$getIndex(a);
                    }) : l.$activeIndex = [] : angular.isDefined(g.$modelValue) && l.$matches.length ? l.$activeIndex = j.$getIndex(g.$modelValue) : l.$activeIndex = -1;
                }, j.$isVisible = function() {
                    return k.minLength && g ? l.$matches.length && g.$viewValue.length >= k.minLength : l.$matches.length;
                }, j.$isActive = function(a) {
                    return k.multiple ? -1 !== l.$activeIndex.indexOf(a) : l.$activeIndex === a;
                }, j.$getIndex = function(a) {
                    var b = l.$matches.length, c = b;
                    if (b) {
                        for (c = b; c-- && l.$matches[c].value !== a; ) ;
                        if (!(0 > c)) return c;
                    }
                }, j.$onMouseDown = function(a) {
                    if (a.preventDefault(), a.stopPropagation(), i) {
                        var b = angular.element(a.target);
                        b.triggerHandler("click");
                    }
                }, j.$onKeyDown = function(a) {
                    return /(9|13|38|40)/.test(a.keyCode) ? (9 !== a.keyCode && (a.preventDefault(), 
                    a.stopPropagation()), k.multiple && 9 === a.keyCode ? j.hide() : k.multiple || 13 !== a.keyCode && 9 !== a.keyCode ? void (k.multiple || (38 === a.keyCode && l.$activeIndex > 0 ? l.$activeIndex-- : 38 === a.keyCode && l.$activeIndex < 0 ? l.$activeIndex = l.$matches.length - 1 : 40 === a.keyCode && l.$activeIndex < l.$matches.length - 1 ? l.$activeIndex++ : angular.isUndefined(l.$activeIndex) && (l.$activeIndex = 0), 
                    l.$digest())) : j.select(l.$activeIndex)) : void 0;
                }, j.$isIE = function() {
                    var a = b.navigator.userAgent;
                    return a.indexOf("MSIE ") > 0 || a.indexOf("Trident/") > 0 || a.indexOf("Edge/") > 0;
                }, j.$selectScrollFix = function(a) {
                    "UL" === c[0].activeElement.tagName && (a.preventDefault(), a.stopImmediatePropagation(), 
                    a.target.focus());
                };
                var m = j.show;
                j.show = function() {
                    m(), k.multiple && j.$element.addClass("select-multiple"), f(function() {
                        j.$element.on(i ? "touchstart" : "mousedown", j.$onMouseDown), k.keyboard && d.on("keydown", j.$onKeyDown);
                    }, 0, !1);
                };
                var n = j.hide;
                return j.hide = function() {
                    !k.multiple && angular.isUndefined(g.$modelValue) && (l.$activeIndex = -1), j.$element.off(i ? "touchstart" : "mousedown", j.$onMouseDown), 
                    k.keyboard && d.off("keydown", j.$onKeyDown), n(!0);
                }, j;
            }
            var h = (angular.element(b.document.body), /(ip(a|o)d|iphone|android)/gi.test(b.navigator.userAgent)), i = "createTouch" in b.document && h;
            return g.defaults = a, g;
        } ];
    }).directive("bsSelect", [ "$window", "$parse", "$q", "$select", "$parseOptions", function(a, b, c, d, e) {
        var f = d.defaults;
        return {
            restrict: "EAC",
            require: "ngModel",
            link: function(a, b, c, g) {
                var h = {
                    scope: a,
                    placeholder: f.placeholder
                };
                angular.forEach([ "template", "templateUrl", "controller", "controllerAs", "placement", "container", "delay", "trigger", "keyboard", "html", "animation", "placeholder", "allNoneButtons", "maxLength", "maxLengthHtml", "allText", "noneText", "iconCheckmark", "autoClose", "id", "sort", "caretHtml", "prefixClass", "prefixEvent" ], function(a) {
                    angular.isDefined(c[a]) && (h[a] = c[a]);
                });
                var i = /^(false|0|)$/i;
                angular.forEach([ "html", "container", "allNoneButtons", "sort" ], function(a) {
                    angular.isDefined(c[a]) && i.test(c[a]) && (h[a] = !1);
                });
                var j = b.attr("data-multiple");
                if (angular.isDefined(j) && (i.test(j) ? h.multiple = !1 : h.multiple = j), "select" === b[0].nodeName.toLowerCase()) {
                    var k = b;
                    k.css("display", "none"), b = angular.element('<button type="button" class="btn btn-default"></button>'), 
                    k.after(b);
                }
                var l = e(c.bsOptions), m = d(b, g, h);
                m.$isIE() && b[0].addEventListener("blur", m.$selectScrollFix);
                var n = l.$match[7].replace(/\|.+/, "").trim();
                a.$watch(n, function(b, c) {
                    l.valuesFn(a, g).then(function(a) {
                        m.update(a), g.$render();
                    });
                }, !0), a.$watch(c.ngModel, function(a, b) {
                    m.$updateActiveIndex(), g.$render();
                }, !0), g.$render = function() {
                    var a, c;
                    h.multiple && angular.isArray(g.$modelValue) ? (a = g.$modelValue.map(function(a) {
                        return c = m.$getIndex(a), angular.isDefined(c) ? m.$scope.$matches[c].label : !1;
                    }).filter(angular.isDefined), a = a.length > (h.maxLength || f.maxLength) ? a.length + " " + (h.maxLengthHtml || f.maxLengthHtml) : a.join(", ")) : (c = m.$getIndex(g.$modelValue), 
                    a = angular.isDefined(c) ? m.$scope.$matches[c].label : !1), b.html((a ? a : h.placeholder) + (h.caretHtml ? h.caretHtml : f.caretHtml));
                }, h.multiple && (g.$isEmpty = function(a) {
                    return !a || 0 === a.length;
                }), a.$on("$destroy", function() {
                    m && m.destroy(), h = null, m = null;
                });
            }
        };
    } ]), angular.module("mgcrea.ngStrap.popover", [ "mgcrea.ngStrap.tooltip" ]).provider("$popover", function() {
        var a = this.defaults = {
            animation: "am-fade",
            customClass: "",
            container: !1,
            target: !1,
            placement: "right",
            templateUrl: "popover/popover.tpl.html",
            contentTemplate: !1,
            trigger: "click",
            keyboard: !0,
            html: !1,
            title: "",
            content: "",
            delay: 0,
            autoClose: !1
        };
        this.$get = [ "$tooltip", function(b) {
            function c(c, d) {
                var e = angular.extend({}, a, d), f = b(c, e);
                return e.content && (f.$scope.content = e.content), f;
            }
            return c;
        } ];
    }).directive("bsPopover", [ "$window", "$sce", "$popover", function(a, b, c) {
        var d = a.requestAnimationFrame || a.setTimeout;
        return {
            restrict: "EAC",
            scope: !0,
            link: function(a, e, f) {
                var g = {
                    scope: a
                };
                angular.forEach([ "template", "templateUrl", "controller", "controllerAs", "contentTemplate", "placement", "container", "delay", "trigger", "html", "animation", "customClass", "autoClose", "id", "prefixClass", "prefixEvent" ], function(a) {
                    angular.isDefined(f[a]) && (g[a] = f[a]);
                });
                var h = /^(false|0|)$/i;
                angular.forEach([ "html", "container", "autoClose" ], function(a) {
                    angular.isDefined(f[a]) && h.test(f[a]) && (g[a] = !1);
                });
                var i = e.attr("data-target");
                angular.isDefined(i) && (h.test(i) ? g.target = !1 : g.target = i), angular.forEach([ "title", "content" ], function(c) {
                    f[c] && f.$observe(c, function(e, f) {
                        a[c] = b.trustAsHtml(e), angular.isDefined(f) && d(function() {
                            j && j.$applyPlacement();
                        });
                    });
                }), f.bsPopover && a.$watch(f.bsPopover, function(b, c) {
                    angular.isObject(b) ? angular.extend(a, b) : a.content = b, angular.isDefined(c) && d(function() {
                        j && j.$applyPlacement();
                    });
                }, !0), f.bsShow && a.$watch(f.bsShow, function(a, b) {
                    j && angular.isDefined(a) && (angular.isString(a) && (a = !!a.match(/true|,?(popover),?/i)), 
                    a === !0 ? j.show() : j.hide());
                }), f.viewport && a.$watch(f.viewport, function(a) {
                    j && angular.isDefined(a) && j.setViewport(a);
                });
                var j = c(e, g);
                a.$on("$destroy", function() {
                    j && j.destroy(), g = null, j = null;
                });
            }
        };
    } ]), angular.version.minor < 3 && angular.version.dot < 14 && angular.module("ng").factory("$$rAF", [ "$window", "$timeout", function(a, b) {
        var c = a.requestAnimationFrame || a.webkitRequestAnimationFrame || a.mozRequestAnimationFrame, d = a.cancelAnimationFrame || a.webkitCancelAnimationFrame || a.mozCancelAnimationFrame || a.webkitCancelRequestAnimationFrame, e = !!c, f = e ? function(a) {
            var b = c(a);
            return function() {
                d(b);
            };
        } : function(a) {
            var c = b(a, 16.66, !1);
            return function() {
                b.cancel(c);
            };
        };
        return f.supported = e, f;
    } ]), angular.module("mgcrea.ngStrap.helpers.parseOptions", []).provider("$parseOptions", function() {
        var a = this.defaults = {
            regexp: /^\s*(.*?)(?:\s+as\s+(.*?))?(?:\s+group\s+by\s+(.*))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+(.*?)(?:\s+track\s+by\s+(.*?))?$/
        };
        this.$get = [ "$parse", "$q", function(b, c) {
            function d(d, e) {
                function f(a, b) {
                    return a.map(function(a, c) {
                        var d, e, f = {};
                        return f[k] = a, d = j(b, f), e = n(b, f), {
                            label: d,
                            value: e,
                            index: c
                        };
                    });
                }
                var g = {}, h = angular.extend({}, a, e);
                g.$values = [];
                var i, j, k, l, m, n, o;
                return g.init = function() {
                    g.$match = i = d.match(h.regexp), j = b(i[2] || i[1]), k = i[4] || i[6], l = i[5], 
                    m = b(i[3] || ""), n = b(i[2] ? i[1] : k), o = b(i[7]);
                }, g.valuesFn = function(a, b) {
                    return c.when(o(a, b)).then(function(b) {
                        return angular.isArray(b) || (b = []), g.$values = b.length ? f(b, a) : [], g.$values;
                    });
                }, g.displayValue = function(a) {
                    var b = {};
                    return b[k] = a, j(b);
                }, g.init(), g;
            }
            return d;
        } ];
    }), angular.module("mgcrea.ngStrap.helpers.dimensions", []).factory("dimensions", [ "$document", "$window", function(b, c) {
        var d = (angular.element, {}), e = d.nodeName = function(a, b) {
            return a.nodeName && a.nodeName.toLowerCase() === b.toLowerCase();
        };
        d.css = function(b, c, d) {
            var e;
            return e = b.currentStyle ? b.currentStyle[c] : a.getComputedStyle ? a.getComputedStyle(b)[c] : b.style[c], 
            d === !0 ? parseFloat(e) || 0 : e;
        }, d.offset = function(b) {
            var c = b.getBoundingClientRect(), d = b.ownerDocument;
            return {
                width: c.width || b.offsetWidth,
                height: c.height || b.offsetHeight,
                top: c.top + (a.pageYOffset || d.documentElement.scrollTop) - (d.documentElement.clientTop || 0),
                left: c.left + (a.pageXOffset || d.documentElement.scrollLeft) - (d.documentElement.clientLeft || 0)
            };
        }, d.setOffset = function(a, b, c) {
            var e, f, g, h, i, j, k, l = d.css(a, "position"), m = angular.element(a), n = {};
            "static" === l && (a.style.position = "relative"), i = d.offset(a), g = d.css(a, "top"), 
            j = d.css(a, "left"), k = ("absolute" === l || "fixed" === l) && (g + j).indexOf("auto") > -1, 
            k ? (e = d.position(a), h = e.top, f = e.left) : (h = parseFloat(g) || 0, f = parseFloat(j) || 0), 
            angular.isFunction(b) && (b = b.call(a, c, i)), null !== b.top && (n.top = b.top - i.top + h), 
            null !== b.left && (n.left = b.left - i.left + f), "using" in b ? b.using.call(m, n) : m.css({
                top: n.top + "px",
                left: n.left + "px"
            });
        }, d.position = function(a) {
            var b, c, g = {
                top: 0,
                left: 0
            };
            return "fixed" === d.css(a, "position") ? c = a.getBoundingClientRect() : (b = f(a), 
            c = d.offset(a), e(b, "html") || (g = d.offset(b)), g.top += d.css(b, "borderTopWidth", !0), 
            g.left += d.css(b, "borderLeftWidth", !0)), {
                width: a.offsetWidth,
                height: a.offsetHeight,
                top: c.top - g.top - d.css(a, "marginTop", !0),
                left: c.left - g.left - d.css(a, "marginLeft", !0)
            };
        };
        var f = function(a) {
            var b = a.ownerDocument, c = a.offsetParent || b;
            if (e(c, "#document")) return b.documentElement;
            for (;c && !e(c, "html") && "static" === d.css(c, "position"); ) c = c.offsetParent;
            return c || b.documentElement;
        };
        return d.height = function(a, b) {
            var c = a.offsetHeight;
            return b ? c += d.css(a, "marginTop", !0) + d.css(a, "marginBottom", !0) : c -= d.css(a, "paddingTop", !0) + d.css(a, "paddingBottom", !0) + d.css(a, "borderTopWidth", !0) + d.css(a, "borderBottomWidth", !0), 
            c;
        }, d.width = function(a, b) {
            var c = a.offsetWidth;
            return b ? c += d.css(a, "marginLeft", !0) + d.css(a, "marginRight", !0) : c -= d.css(a, "paddingLeft", !0) + d.css(a, "paddingRight", !0) + d.css(a, "borderLeftWidth", !0) + d.css(a, "borderRightWidth", !0), 
            c;
        }, d;
    } ]), angular.module("mgcrea.ngStrap.helpers.debounce", []).factory("debounce", [ "$timeout", function(a) {
        return function(b, c, d) {
            var e = null;
            return function() {
                var f = this, g = arguments, h = d && !e;
                return e && a.cancel(e), e = a(function() {
                    e = null, d || b.apply(f, g);
                }, c, !1), h && b.apply(f, g), e;
            };
        };
    } ]).factory("throttle", [ "$timeout", function(a) {
        return function(b, c, d) {
            var e = null;
            return d || (d = {}), function() {
                var f = this, g = arguments;
                e || (d.leading !== !1 && b.apply(f, g), e = a(function() {
                    e = null, d.trailing !== !1 && b.apply(f, g);
                }, c, !1));
            };
        };
    } ]), angular.module("mgcrea.ngStrap.helpers.dateParser", []).provider("$dateParser", [ "$localeProvider", function(a) {
        function b() {
            this.year = 1970, this.month = 0, this.day = 1, this.hours = 0, this.minutes = 0, 
            this.seconds = 0, this.milliseconds = 0;
        }
        function c() {}
        function d(a) {
            return !isNaN(parseFloat(a)) && isFinite(a);
        }
        function e(a, b) {
            for (var c = a.length, d = b.toString().toLowerCase(), e = 0; c > e; e++) if (a[e].toLowerCase() === d) return e;
            return -1;
        }
        b.prototype.setMilliseconds = function(a) {
            this.milliseconds = a;
        }, b.prototype.setSeconds = function(a) {
            this.seconds = a;
        }, b.prototype.setMinutes = function(a) {
            this.minutes = a;
        }, b.prototype.setHours = function(a) {
            this.hours = a;
        }, b.prototype.getHours = function() {
            return this.hours;
        }, b.prototype.setDate = function(a) {
            this.day = a;
        }, b.prototype.setMonth = function(a) {
            this.month = a;
        }, b.prototype.setFullYear = function(a) {
            this.year = a;
        }, b.prototype.fromDate = function(a) {
            return this.year = a.getFullYear(), this.month = a.getMonth(), this.day = a.getDate(), 
            this.hours = a.getHours(), this.minutes = a.getMinutes(), this.seconds = a.getSeconds(), 
            this.milliseconds = a.getMilliseconds(), this;
        }, b.prototype.toDate = function() {
            return new Date(this.year, this.month, this.day, this.hours, this.minutes, this.seconds, this.milliseconds);
        };
        var f = b.prototype, g = this.defaults = {
            format: "shortDate",
            strict: !1
        };
        this.$get = [ "$locale", "dateFilter", function(a, h) {
            var i = function(i) {
                function j(a) {
                    var b = k(a);
                    return o(b);
                }
                function k(a) {
                    var b = l(a), c = b.replace(/''/g, "\\'"), d = /('(?:\\'|.)*?')/, e = c.split(d), f = Object.keys(v), g = [];
                    return angular.forEach(e, function(a) {
                        if (m(a)) a = n(a); else for (var b = 0; b < f.length; b++) a = a.split(f[b]).join("${" + b + "}");
                        g.push(a);
                    }), g.join("");
                }
                function l(a) {
                    return a.replace(/\\/g, "[\\\\]").replace(/-/g, "[-]").replace(/\./g, "[.]").replace(/\*/g, "[*]").replace(/\+/g, "[+]").replace(/\?/g, "[?]").replace(/\$/g, "[$]").replace(/\^/g, "[^]").replace(/\//g, "[/]").replace(/\\s/g, "[\\s]");
                }
                function m(a) {
                    return /^'.*'$/.test(a);
                }
                function n(a) {
                    return a.replace(/^'(.*)'$/, "$1");
                }
                function o(a) {
                    for (var b = Object.keys(v), c = a, d = 0; d < b.length; d++) c = c.split("${" + d + "}").join("(" + v[b[d]] + ")");
                    return new RegExp("^" + c + "$", [ "i" ]);
                }
                function p(a) {
                    var b = k(a);
                    return q(b);
                }
                function q(a) {
                    for (var b, c, d, e, f = Object.keys(v), g = new RegExp("\\${(\\d+)}", "g"), h = []; null !== (b = g.exec(a)); ) c = b[1], 
                    d = f[c], e = w[d], h.push(e);
                    return h;
                }
                var r, s, t = angular.extend({}, g, i), u = {}, v = {
                    sss: "[0-9]{3}",
                    ss: "[0-5][0-9]",
                    s: t.strict ? "[1-5]?[0-9]" : "[0-9]|[0-5][0-9]",
                    mm: "[0-5][0-9]",
                    m: t.strict ? "[1-5]?[0-9]" : "[0-9]|[0-5][0-9]",
                    HH: "[01][0-9]|2[0-3]",
                    H: t.strict ? "1?[0-9]|2[0-3]" : "[01]?[0-9]|2[0-3]",
                    hh: "[0][1-9]|[1][012]",
                    h: t.strict ? "[1-9]|1[012]" : "0?[1-9]|1[012]",
                    a: "AM|PM",
                    EEEE: a.DATETIME_FORMATS.DAY.join("|"),
                    EEE: a.DATETIME_FORMATS.SHORTDAY.join("|"),
                    dd: "0[1-9]|[12][0-9]|3[01]",
                    d: t.strict ? "[1-9]|[1-2][0-9]|3[01]" : "0?[1-9]|[1-2][0-9]|3[01]",
                    MMMM: a.DATETIME_FORMATS.MONTH.join("|"),
                    MMM: a.DATETIME_FORMATS.SHORTMONTH.join("|"),
                    MM: "0[1-9]|1[012]",
                    M: t.strict ? "[1-9]|1[012]" : "0?[1-9]|1[012]",
                    yyyy: "[1]{1}[0-9]{3}|[2]{1}[0-9]{3}",
                    yy: "[0-9]{2}",
                    y: t.strict ? "-?(0|[1-9][0-9]{0,3})" : "-?0*[0-9]{1,4}"
                }, w = {
                    sss: f.setMilliseconds,
                    ss: f.setSeconds,
                    s: f.setSeconds,
                    mm: f.setMinutes,
                    m: f.setMinutes,
                    HH: f.setHours,
                    H: f.setHours,
                    hh: f.setHours,
                    h: f.setHours,
                    EEEE: c,
                    EEE: c,
                    dd: f.setDate,
                    d: f.setDate,
                    a: function(a) {
                        var b = this.getHours() % 12;
                        return this.setHours(a.match(/pm/i) ? b + 12 : b);
                    },
                    MMMM: function(b) {
                        return this.setMonth(e(a.DATETIME_FORMATS.MONTH, b));
                    },
                    MMM: function(b) {
                        return this.setMonth(e(a.DATETIME_FORMATS.SHORTMONTH, b));
                    },
                    MM: function(a) {
                        return this.setMonth(1 * a - 1);
                    },
                    M: function(a) {
                        return this.setMonth(1 * a - 1);
                    },
                    yyyy: f.setFullYear,
                    yy: function(a) {
                        return this.setFullYear(2e3 + 1 * a);
                    },
                    y: function(a) {
                        return 50 >= 1 * a && 2 === a.length ? this.setFullYear(2e3 + 1 * a) : this.setFullYear(1 * a);
                    }
                };
                return u.init = function() {
                    u.$format = a.DATETIME_FORMATS[t.format] || t.format, r = j(u.$format), s = p(u.$format);
                }, u.isValid = function(a) {
                    return angular.isDate(a) ? !isNaN(a.getTime()) : r.test(a);
                }, u.parse = function(c, d, e, f) {
                    e && (e = a.DATETIME_FORMATS[e] || e), angular.isDate(c) && (c = h(c, e || u.$format, f));
                    var g = e ? j(e) : r, i = e ? p(e) : s, k = g.exec(c);
                    if (!k) return !1;
                    for (var l = d && !isNaN(d.getTime()) ? new b().fromDate(d) : new b().fromDate(new Date(1970, 0, 1, 0)), m = 0; m < k.length - 1; m++) i[m] && i[m].call(l, k[m + 1]);
                    var n = l.toDate();
                    return parseInt(l.day, 10) !== n.getDate() ? !1 : n;
                }, u.getDateForAttribute = function(a, b) {
                    var c;
                    if ("today" === b) {
                        var e = new Date();
                        c = new Date(e.getFullYear(), e.getMonth(), e.getDate() + ("maxDate" === a ? 1 : 0), 0, 0, 0, "minDate" === a ? 0 : -1);
                    } else c = angular.isString(b) && b.match(/^".+"$/) ? new Date(b.substr(1, b.length - 2)) : d(b) ? new Date(parseInt(b, 10)) : angular.isString(b) && 0 === b.length ? "minDate" === a ? -(1 / 0) : +(1 / 0) : new Date(b);
                    return c;
                }, u.getTimeForAttribute = function(a, b) {
                    var c;
                    return c = "now" === b ? new Date().setFullYear(1970, 0, 1) : angular.isString(b) && b.match(/^".+"$/) ? new Date(b.substr(1, b.length - 2)).setFullYear(1970, 0, 1) : d(b) ? new Date(parseInt(b, 10)).setFullYear(1970, 0, 1) : angular.isString(b) && 0 === b.length ? "minTime" === a ? -(1 / 0) : +(1 / 0) : u.parse(b, new Date(1970, 0, 1, 0));
                }, u.daylightSavingAdjust = function(a) {
                    return a ? (a.setHours(a.getHours() > 12 ? a.getHours() + 2 : 0), a) : null;
                }, u.timezoneOffsetAdjust = function(a, b, c) {
                    return a ? (b && "UTC" === b && (a = new Date(a.getTime()), a.setMinutes(a.getMinutes() + (c ? -1 : 1) * a.getTimezoneOffset())), 
                    a) : null;
                }, u.init(), u;
            };
            return i;
        } ];
    } ]), angular.module("mgcrea.ngStrap.helpers.dateFormatter", []).service("$dateFormatter", [ "$locale", "dateFilter", function(a, b) {
        function c(a) {
            return /(h+)([:\.])?(m+)([:\.])?(s*)[ ]?(a?)/i.exec(a).slice(1);
        }
        this.getDefaultLocale = function() {
            return a.id;
        }, this.getDatetimeFormat = function(b, c) {
            return a.DATETIME_FORMATS[b] || b;
        }, this.weekdaysShort = function(b) {
            return a.DATETIME_FORMATS.SHORTDAY;
        }, this.hoursFormat = function(a) {
            return c(a)[0];
        }, this.minutesFormat = function(a) {
            return c(a)[2];
        }, this.secondsFormat = function(a) {
            return c(a)[4];
        }, this.timeSeparator = function(a) {
            return c(a)[1];
        }, this.showSeconds = function(a) {
            return !!c(a)[4];
        }, this.showAM = function(a) {
            return !!c(a)[5];
        }, this.formatDate = function(a, c, d, e) {
            return b(a, c, e);
        };
    } ]), angular.module("mgcrea.ngStrap.core", []).service("$bsCompiler", d), d.$inject = [ "$q", "$http", "$injector", "$compile", "$controller", "$templateCache" ], 
    angular.module("mgcrea.ngStrap.navbar", []).provider("$navbar", function() {
        var a = this.defaults = {
            activeClass: "active",
            routeAttr: "data-match-route",
            strict: !1
        };
        this.$get = function() {
            return {
                defaults: a
            };
        };
    }).directive("bsNavbar", [ "$window", "$location", "$navbar", function(a, b, c) {
        var d = c.defaults;
        return {
            restrict: "A",
            link: function(a, c, e, f) {
                var g = angular.copy(d);
                angular.forEach(Object.keys(d), function(a) {
                    angular.isDefined(e[a]) && (g[a] = e[a]);
                }), a.$watch(function() {
                    return b.path();
                }, function(a, b) {
                    var d = c[0].querySelectorAll("li[" + g.routeAttr + "]");
                    angular.forEach(d, function(b) {
                        var c = angular.element(b), d = c.attr(g.routeAttr).replace("/", "\\/");
                        g.strict && (d = "^" + d + "$");
                        var e = new RegExp(d, "i");
                        e.test(a) ? c.addClass(g.activeClass) : c.removeClass(g.activeClass);
                    });
                });
            }
        };
    } ]), angular.module("mgcrea.ngStrap.modal", [ "mgcrea.ngStrap.core", "mgcrea.ngStrap.helpers.dimensions" ]).provider("$modal", function() {
        var a = this.defaults = {
            animation: "am-fade",
            backdropAnimation: "am-fade",
            prefixClass: "modal",
            prefixEvent: "modal",
            placement: "top",
            templateUrl: "modal/modal.tpl.html",
            template: "",
            contentTemplate: !1,
            container: !1,
            element: null,
            backdrop: !0,
            keyboard: !0,
            html: !1,
            show: !0
        };
        this.$get = [ "$window", "$rootScope", "$bsCompiler", "$animate", "$timeout", "$sce", "dimensions", function(c, d, e, f, g, h, i) {
            function j(b) {
                function c() {
                    A.$emit(y.prefixEvent + ".show", x);
                }
                function g() {
                    A.$emit(y.prefixEvent + ".hide", x), o.removeClass(y.prefixClass + "-open"), y.animation && o.removeClass(y.prefixClass + "-with-" + y.animation);
                }
                function i() {
                    y.backdrop && (C.on("click", u), E.on("click", u), E.on("wheel", v));
                }
                function j() {
                    y.backdrop && (C.off("click", u), E.off("click", u), E.off("wheel", v));
                }
                function s() {
                    y.keyboard && C.on("keyup", x.$onKeyUp);
                }
                function t() {
                    y.keyboard && C.off("keyup", x.$onKeyUp);
                }
                function u(a) {
                    a.target === a.currentTarget && ("static" === y.backdrop ? x.focus() : x.hide());
                }
                function v(a) {
                    a.preventDefault();
                }
                function w() {
                    x.$isShown && null !== C && (j(), t()), D && (D.$destroy(), D = null), C && (C.remove(), 
                    C = x.$element = null);
                }
                var x = {}, y = x.$options = angular.extend({}, a, b), z = x.$promise = e.compile(y), A = x.$scope = y.scope && y.scope.$new() || d.$new();
                y.element || y.container || (y.container = "body"), x.$id = y.id || y.element && y.element.attr("id") || "", 
                m([ "title", "content" ], function(a) {
                    y[a] && (A[a] = h.trustAsHtml(y[a]));
                }), A.$hide = function() {
                    A.$$postDigest(function() {
                        x.hide();
                    });
                }, A.$show = function() {
                    A.$$postDigest(function() {
                        x.show();
                    });
                }, A.$toggle = function() {
                    A.$$postDigest(function() {
                        x.toggle();
                    });
                }, x.$isShown = A.$isShown = !1;
                var B, C, D, E = angular.element('<div class="' + y.prefixClass + '-backdrop"/>');
                return E.css({
                    position: "fixed",
                    top: "0px",
                    left: "0px",
                    bottom: "0px",
                    right: "0px"
                }), z.then(function(a) {
                    B = a, x.init();
                }), x.init = function() {
                    y.show && A.$$postDigest(function() {
                        x.show();
                    });
                }, x.destroy = function() {
                    w(), E && (E.remove(), E = null), A.$destroy();
                }, x.show = function() {
                    if (!x.$isShown) {
                        var a, b;
                        if (angular.isElement(y.container) ? (a = y.container, b = y.container[0].lastChild ? angular.element(y.container[0].lastChild) : null) : y.container ? (a = l(y.container), 
                        b = a[0] && a[0].lastChild ? angular.element(a[0].lastChild) : null) : (a = null, 
                        b = y.element), C && w(), D = x.$scope.$new(), C = x.$element = B.link(D, function(a, b) {}), 
                        y.backdrop && (C.css({
                            "z-index": q + 20 * p
                        }), E.css({
                            "z-index": r + 20 * p
                        }), p++), !A.$emit(y.prefixEvent + ".show.before", x).defaultPrevented) {
                            C.css({
                                display: "block"
                            }).addClass(y.placement), y.animation && (y.backdrop && E.addClass(y.backdropAnimation), 
                            C.addClass(y.animation)), y.backdrop && f.enter(E, o, null), angular.version.minor <= 2 ? f.enter(C, a, b, c) : f.enter(C, a, b).then(c), 
                            x.$isShown = A.$isShown = !0, k(A);
                            var d = C[0];
                            n(function() {
                                d.focus();
                            }), o.addClass(y.prefixClass + "-open"), y.animation && o.addClass(y.prefixClass + "-with-" + y.animation), 
                            i(), s();
                        }
                    }
                }, x.hide = function() {
                    x.$isShown && (y.backdrop && p--, A.$emit(y.prefixEvent + ".hide.before", x).defaultPrevented || (angular.version.minor <= 2 ? f.leave(C, g) : f.leave(C).then(g), 
                    y.backdrop && f.leave(E), x.$isShown = A.$isShown = !1, k(A), j(), t()));
                }, x.toggle = function() {
                    x.$isShown ? x.hide() : x.show();
                }, x.focus = function() {
                    C[0].focus();
                }, x.$onKeyUp = function(a) {
                    27 === a.which && x.$isShown && (x.hide(), a.stopPropagation());
                }, x;
            }
            function k(a) {
                a.$$phase || a.$root && a.$root.$$phase || a.$digest();
            }
            function l(a, c) {
                return angular.element((c || b).querySelectorAll(a));
            }
            var m = angular.forEach, n = (String.prototype.trim, c.requestAnimationFrame || c.setTimeout), o = angular.element(c.document.body), p = 0, q = 1050, r = 1040;
            return j;
        } ];
    }).directive("bsModal", [ "$window", "$sce", "$modal", function(a, b, c) {
        return {
            restrict: "EAC",
            scope: !0,
            link: function(a, d, e, f) {
                var g = {
                    scope: a,
                    element: d,
                    show: !1
                };
                angular.forEach([ "template", "templateUrl", "controller", "controllerAs", "contentTemplate", "placement", "backdrop", "keyboard", "html", "container", "animation", "backdropAnimation", "id", "prefixEvent", "prefixClass" ], function(a) {
                    angular.isDefined(e[a]) && (g[a] = e[a]);
                });
                var h = /^(false|0|)$/i;
                angular.forEach([ "backdrop", "keyboard", "html", "container" ], function(a) {
                    angular.isDefined(e[a]) && h.test(e[a]) && (g[a] = !1);
                }), angular.forEach([ "title", "content" ], function(c) {
                    e[c] && e.$observe(c, function(d, e) {
                        a[c] = b.trustAsHtml(d);
                    });
                }), e.bsModal && a.$watch(e.bsModal, function(b, c) {
                    angular.isObject(b) ? angular.extend(a, b) : a.content = b;
                }, !0);
                var i = c(g);
                d.on(e.trigger || "click", i.toggle), a.$on("$destroy", function() {
                    i && i.destroy(), g = null, i = null;
                });
            }
        };
    } ]), angular.module("mgcrea.ngStrap.dropdown", [ "mgcrea.ngStrap.tooltip" ]).provider("$dropdown", function() {
        var a = this.defaults = {
            animation: "am-fade",
            prefixClass: "dropdown",
            prefixEvent: "dropdown",
            placement: "bottom-left",
            templateUrl: "dropdown/dropdown.tpl.html",
            trigger: "click",
            container: !1,
            keyboard: !0,
            html: !1,
            delay: 0
        };
        this.$get = [ "$window", "$rootScope", "$tooltip", "$timeout", function(b, c, d, e) {
            function f(b, f) {
                function i(a) {
                    return a.target !== b[0] ? a.target !== b[0] && j.hide() : void 0;
                }
                var j = {}, k = angular.extend({}, a, f);
                j.$scope = k.scope && k.scope.$new() || c.$new();
                j = d(b, k);
                var l = b.parent();
                j.$onKeyDown = function(a) {
                    if (/(38|40)/.test(a.keyCode)) {
                        a.preventDefault(), a.stopPropagation();
                        var b = angular.element(j.$element[0].querySelectorAll("li:not(.divider) a"));
                        if (b.length) {
                            var c;
                            angular.forEach(b, function(a, b) {
                                h && h.call(a, ":focus") && (c = b);
                            }), 38 === a.keyCode && c > 0 ? c-- : 40 === a.keyCode && c < b.length - 1 ? c++ : angular.isUndefined(c) && (c = 0), 
                            b.eq(c)[0].focus();
                        }
                    }
                };
                var m = j.show;
                j.show = function() {
                    m(), e(function() {
                        k.keyboard && j.$element && j.$element.on("keydown", j.$onKeyDown), g.on("click", i);
                    }, 0, !1), l.hasClass("dropdown") && l.addClass("open");
                };
                var n = j.hide;
                j.hide = function() {
                    j.$isShown && (k.keyboard && j.$element && j.$element.off("keydown", j.$onKeyDown), 
                    g.off("click", i), l.hasClass("dropdown") && l.removeClass("open"), n());
                };
                var o = j.destroy;
                return j.destroy = function() {
                    g.off("click", i), o();
                }, j;
            }
            var g = angular.element(b.document.body), h = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;
            return f;
        } ];
    }).directive("bsDropdown", [ "$window", "$sce", "$dropdown", function(a, b, d) {
        return {
            restrict: "EAC",
            scope: !0,
            compile: function(a, b) {
                if (!b.bsDropdown) {
                    for (var e = a[0].nextSibling; e && 1 !== e.nodeType; ) e = e.nextSibling;
                    e.classList.contains("dropdown-menu") && (b.template = e.outerHTML, b.templateUrl = c, 
                    e.parentNode.removeChild(e));
                }
                return function(a, c, e) {
                    var f = {
                        scope: a
                    };
                    angular.forEach([ "template", "templateUrl", "controller", "controllerAs", "placement", "container", "delay", "trigger", "keyboard", "html", "animation", "id", "autoClose" ], function(a) {
                        angular.isDefined(b[a]) && (f[a] = b[a]);
                    });
                    var g = /^(false|0|)$/i;
                    angular.forEach([ "html", "container" ], function(a) {
                        angular.isDefined(e[a]) && g.test(e[a]) && (f[a] = !1);
                    }), e.bsDropdown && a.$watch(e.bsDropdown, function(b, c) {
                        a.content = b;
                    }, !0), e.bsShow && a.$watch(e.bsShow, function(a, b) {
                        h && angular.isDefined(a) && (angular.isString(a) && (a = !!a.match(/true|,?(dropdown),?/i)), 
                        a === !0 ? h.show() : h.hide());
                    });
                    var h = d(c, f);
                    a.$on("$destroy", function() {
                        h && h.destroy(), f = null, h = null;
                    });
                };
            }
        };
    } ]), angular.module("mgcrea.ngStrap.aside", [ "mgcrea.ngStrap.modal" ]).provider("$aside", function() {
        var a = this.defaults = {
            animation: "am-fade-and-slide-right",
            prefixClass: "aside",
            prefixEvent: "aside",
            placement: "right",
            templateUrl: "aside/aside.tpl.html",
            contentTemplate: !1,
            container: !1,
            element: null,
            backdrop: !0,
            keyboard: !0,
            html: !1,
            show: !0
        };
        this.$get = [ "$modal", function(b) {
            function c(c) {
                var d = {}, e = angular.extend({}, a, c);
                return d = b(e);
            }
            return c;
        } ];
    }).directive("bsAside", [ "$window", "$sce", "$aside", function(a, b, c) {
        a.requestAnimationFrame || a.setTimeout;
        return {
            restrict: "EAC",
            scope: !0,
            link: function(a, d, e, f) {
                var g = {
                    scope: a,
                    element: d,
                    show: !1
                };
                angular.forEach([ "template", "templateUrl", "controller", "controllerAs", "contentTemplate", "placement", "backdrop", "keyboard", "html", "container", "animation" ], function(a) {
                    angular.isDefined(e[a]) && (g[a] = e[a]);
                });
                var h = /^(false|0|)$/i;
                angular.forEach([ "backdrop", "keyboard", "html", "container" ], function(a) {
                    angular.isDefined(e[a]) && h.test(e[a]) && (g[a] = !1);
                }), angular.forEach([ "title", "content" ], function(c) {
                    e[c] && e.$observe(c, function(d, e) {
                        a[c] = b.trustAsHtml(d);
                    });
                }), e.bsAside && a.$watch(e.bsAside, function(b, c) {
                    angular.isObject(b) ? angular.extend(a, b) : a.content = b;
                }, !0);
                var i = c(g);
                d.on(e.trigger || "click", i.toggle), a.$on("$destroy", function() {
                    i && i.destroy(), g = null, i = null;
                });
            }
        };
    } ]), angular.module("mgcrea.ngStrap.datepicker", [ "mgcrea.ngStrap.helpers.dateParser", "mgcrea.ngStrap.helpers.dateFormatter", "mgcrea.ngStrap.tooltip" ]).provider("$datepicker", function() {
        var a = this.defaults = {
            animation: "am-fade",
            prefixClass: "datepicker",
            placement: "bottom-left",
            templateUrl: "datepicker/datepicker.tpl.html",
            trigger: "focus",
            container: !1,
            keyboard: !0,
            html: !1,
            delay: 0,
            useNative: !1,
            dateType: "date",
            dateFormat: "shortDate",
            timezone: null,
            modelDateFormat: null,
            dayFormat: "dd",
            monthFormat: "MMM",
            yearFormat: "yyyy",
            monthTitleFormat: "MMMM yyyy",
            yearTitleFormat: "yyyy",
            strictFormat: !1,
            autoclose: !1,
            minDate: -(1 / 0),
            maxDate: +(1 / 0),
            startView: 0,
            minView: 0,
            startWeek: 0,
            daysOfWeekDisabled: "",
            iconLeft: "glyphicon glyphicon-chevron-left",
            iconRight: "glyphicon glyphicon-chevron-right"
        };
        this.$get = [ "$window", "$document", "$rootScope", "$sce", "$dateFormatter", "datepickerViews", "$tooltip", "$timeout", function(b, c, d, e, f, g, h, i) {
            function j(b, c, d) {
                function e(a) {
                    a.selected = j.$isSelected(a.date);
                }
                function f() {
                    b[0].focus();
                }
                var j = h(b, angular.extend({}, a, d)), m = d.scope, n = j.$options, o = j.$scope;
                n.startView && (n.startView -= n.minView);
                var p = g(j);
                j.$views = p.views;
                var q = p.viewDate;
                o.$mode = n.startView, o.$iconLeft = n.iconLeft, o.$iconRight = n.iconRight;
                var r = j.$views[o.$mode];
                o.$select = function(a) {
                    j.select(a);
                }, o.$selectPane = function(a) {
                    j.$selectPane(a);
                }, o.$toggleMode = function() {
                    j.setMode((o.$mode + 1) % j.$views.length);
                }, j.update = function(a) {
                    angular.isDate(a) && !isNaN(a.getTime()) && (j.$date = a, r.update.call(r, a)), 
                    j.$build(!0);
                }, j.updateDisabledDates = function(a) {
                    n.disabledDateRanges = a;
                    for (var b = 0, c = o.rows.length; c > b; b++) angular.forEach(o.rows[b], j.$setDisabledEl);
                }, j.select = function(a, b) {
                    angular.isDate(c.$dateValue) || (c.$dateValue = new Date(a)), !o.$mode || b ? (c.$setViewValue(angular.copy(a)), 
                    c.$render(), n.autoclose && !b && i(function() {
                        j.hide(!0);
                    })) : (angular.extend(q, {
                        year: a.getFullYear(),
                        month: a.getMonth(),
                        date: a.getDate()
                    }), j.setMode(o.$mode - 1), j.$build());
                }, j.setMode = function(a) {
                    o.$mode = a, r = j.$views[o.$mode], j.$build();
                }, j.$build = function(a) {
                    a === !0 && r.built || (a !== !1 || r.built) && r.build.call(r);
                }, j.$updateSelected = function() {
                    for (var a = 0, b = o.rows.length; b > a; a++) angular.forEach(o.rows[a], e);
                }, j.$isSelected = function(a) {
                    return r.isSelected(a);
                }, j.$setDisabledEl = function(a) {
                    a.disabled = r.isDisabled(a.date);
                }, j.$selectPane = function(a) {
                    var b = r.steps, c = new Date(Date.UTC(q.year + (b.year || 0) * a, q.month + (b.month || 0) * a, 1));
                    angular.extend(q, {
                        year: c.getUTCFullYear(),
                        month: c.getUTCMonth(),
                        date: c.getUTCDate()
                    }), j.$build();
                }, j.$onMouseDown = function(a) {
                    if (a.preventDefault(), a.stopPropagation(), l) {
                        var b = angular.element(a.target);
                        "button" !== b[0].nodeName.toLowerCase() && (b = b.parent()), b.triggerHandler("click");
                    }
                }, j.$onKeyDown = function(a) {
                    if (/(38|37|39|40|13)/.test(a.keyCode) && !a.shiftKey && !a.altKey) {
                        if (a.preventDefault(), a.stopPropagation(), 13 === a.keyCode) return void (o.$mode ? o.$apply(function() {
                            j.setMode(o.$mode - 1);
                        }) : j.hide(!0));
                        r.onKeyDown(a), m.$digest();
                    }
                };
                var s = j.init;
                j.init = function() {
                    return k && n.useNative ? (b.prop("type", "date"), void b.css("-webkit-appearance", "textfield")) : (l && (b.prop("type", "text"), 
                    b.attr("readonly", "true"), b.on("click", f)), void s());
                };
                var t = j.destroy;
                j.destroy = function() {
                    k && n.useNative && b.off("click", f), t();
                };
                var u = j.show;
                j.show = function() {
                    !l && b.attr("readonly") || b.attr("disabled") || (u(), i(function() {
                        j.$isShown && (j.$element.on(l ? "touchstart" : "mousedown", j.$onMouseDown), n.keyboard && b.on("keydown", j.$onKeyDown));
                    }, 0, !1));
                };
                var v = j.hide;
                return j.hide = function(a) {
                    j.$isShown && (j.$element.off(l ? "touchstart" : "mousedown", j.$onMouseDown), n.keyboard && b.off("keydown", j.$onKeyDown), 
                    v(a));
                }, j;
            }
            var k = /(ip(a|o)d|iphone|android)/gi.test(b.navigator.userAgent), l = "createTouch" in b.document && k;
            return a.lang || (a.lang = f.getDefaultLocale()), j.defaults = a, j;
        } ];
    }).directive("bsDatepicker", [ "$window", "$parse", "$q", "$dateFormatter", "$dateParser", "$datepicker", function(a, b, c, d, e, f) {
        var g = (f.defaults, /(ip(a|o)d|iphone|android)/gi.test(a.navigator.userAgent));
        return {
            restrict: "EAC",
            require: "ngModel",
            link: function(a, b, c, h) {
                function i(a) {
                    return a && a.length ? a : null;
                }
                function j(a) {
                    if (angular.isDate(a)) {
                        var b = isNaN(n.$options.minDate) || a.getTime() >= n.$options.minDate, c = isNaN(n.$options.maxDate) || a.getTime() <= n.$options.maxDate, d = b && c;
                        h.$setValidity("date", d), h.$setValidity("min", b), h.$setValidity("max", c), d && (h.$dateValue = a);
                    }
                }
                function k() {
                    return !h.$dateValue || isNaN(h.$dateValue.getTime()) ? "" : p(h.$dateValue, l.dateFormat);
                }
                var l = {
                    scope: a
                };
                angular.forEach([ "template", "templateUrl", "controller", "controllerAs", "placement", "container", "delay", "trigger", "html", "animation", "autoclose", "dateType", "dateFormat", "timezone", "modelDateFormat", "dayFormat", "strictFormat", "startWeek", "startDate", "useNative", "lang", "startView", "minView", "iconLeft", "iconRight", "daysOfWeekDisabled", "id", "prefixClass", "prefixEvent" ], function(a) {
                    angular.isDefined(c[a]) && (l[a] = c[a]);
                });
                var m = /^(false|0|)$/i;
                angular.forEach([ "html", "container", "autoclose", "useNative" ], function(a) {
                    angular.isDefined(c[a]) && m.test(c[a]) && (l[a] = !1);
                });
                var n = f(b, h, l);
                l = n.$options, g && l.useNative && (l.dateFormat = "yyyy-MM-dd");
                var o = l.lang, p = function(a, b) {
                    return d.formatDate(a, b, o);
                }, q = e({
                    format: l.dateFormat,
                    lang: o,
                    strict: l.strictFormat
                });
                c.bsShow && a.$watch(c.bsShow, function(a, b) {
                    n && angular.isDefined(a) && (angular.isString(a) && (a = !!a.match(/true|,?(datepicker),?/i)), 
                    a === !0 ? n.show() : n.hide());
                }), angular.forEach([ "minDate", "maxDate" ], function(a) {
                    angular.isDefined(c[a]) && c.$observe(a, function(b) {
                        n.$options[a] = q.getDateForAttribute(a, b), !isNaN(n.$options[a]) && n.$build(!1), 
                        j(h.$dateValue);
                    });
                }), angular.isDefined(c.dateFormat) && c.$observe("dateFormat", function(a) {
                    n.$options.dateFormat = a;
                }), a.$watch(c.ngModel, function(a, b) {
                    n.update(h.$dateValue);
                }, !0), angular.isDefined(c.disabledDates) && a.$watch(c.disabledDates, function(a, b) {
                    a = i(a), b = i(b), a && n.updateDisabledDates(a);
                }), h.$parsers.unshift(function(a) {
                    var b;
                    if (!a) return h.$setValidity("date", !0), null;
                    var c = q.parse(a, h.$dateValue);
                    return !c || isNaN(c.getTime()) ? void h.$setValidity("date", !1) : (j(c), "string" === l.dateType ? (b = q.timezoneOffsetAdjust(c, l.timezone, !0), 
                    p(b, l.modelDateFormat || l.dateFormat)) : (b = q.timezoneOffsetAdjust(h.$dateValue, l.timezone, !0), 
                    "number" === l.dateType ? b.getTime() : "unix" === l.dateType ? b.getTime() / 1e3 : "iso" === l.dateType ? b.toISOString() : new Date(b)));
                }), h.$formatters.push(function(a) {
                    var b;
                    return b = angular.isUndefined(a) || null === a ? NaN : angular.isDate(a) ? a : "string" === l.dateType ? q.parse(a, null, l.modelDateFormat) : "unix" === l.dateType ? new Date(1e3 * a) : new Date(a), 
                    h.$dateValue = q.timezoneOffsetAdjust(b, l.timezone), k();
                }), h.$render = function() {
                    b.val(k());
                }, a.$on("$destroy", function() {
                    n && n.destroy(), l = null, n = null;
                });
            }
        };
    } ]).provider("datepickerViews", function() {
        function a(a, b) {
            for (var c = []; a.length > 0; ) c.push(a.splice(0, b));
            return c;
        }
        function b(a, b) {
            return (a % b + b) % b;
        }
        this.defaults = {
            dayFormat: "dd",
            daySplit: 7
        };
        this.$get = [ "$dateFormatter", "$dateParser", "$sce", function(c, d, e) {
            return function(f) {
                var g = f.$scope, h = f.$options, i = h.lang, j = function(a, b) {
                    return c.formatDate(a, b, i);
                }, k = d({
                    format: h.dateFormat,
                    lang: i,
                    strict: h.strictFormat
                }), l = c.weekdaysShort(i), m = l.slice(h.startWeek).concat(l.slice(0, h.startWeek)), n = e.trustAsHtml('<th class="dow text-center">' + m.join('</th><th class="dow text-center">') + "</th>"), o = f.$date || (h.startDate ? k.getDateForAttribute("startDate", h.startDate) : new Date()), p = {
                    year: o.getFullYear(),
                    month: o.getMonth(),
                    date: o.getDate()
                }, q = [ {
                    format: h.dayFormat,
                    split: 7,
                    steps: {
                        month: 1
                    },
                    update: function(a, b) {
                        !this.built || b || a.getFullYear() !== p.year || a.getMonth() !== p.month ? (angular.extend(p, {
                            year: f.$date.getFullYear(),
                            month: f.$date.getMonth(),
                            date: f.$date.getDate()
                        }), f.$build()) : (a.getDate() !== p.date || 1 === a.getDate()) && (p.date = f.$date.getDate(), 
                        f.$updateSelected());
                    },
                    build: function() {
                        var c = new Date(p.year, p.month, 1), d = c.getTimezoneOffset(), e = new Date(+c - 864e5 * b(c.getDay() - h.startWeek, 7)), i = e.getTimezoneOffset(), l = k.timezoneOffsetAdjust(new Date(), h.timezone).toDateString();
                        i !== d && (e = new Date(+e + 6e4 * (i - d)));
                        for (var m, o = [], q = 0; 42 > q; q++) m = k.daylightSavingAdjust(new Date(e.getFullYear(), e.getMonth(), e.getDate() + q)), 
                        o.push({
                            date: m,
                            isToday: m.toDateString() === l,
                            label: j(m, this.format),
                            selected: f.$date && this.isSelected(m),
                            muted: m.getMonth() !== p.month,
                            disabled: this.isDisabled(m)
                        });
                        g.title = j(c, h.monthTitleFormat), g.showLabels = !0, g.labels = n, g.rows = a(o, this.split), 
                        this.built = !0;
                    },
                    isSelected: function(a) {
                        return f.$date && a.getFullYear() === f.$date.getFullYear() && a.getMonth() === f.$date.getMonth() && a.getDate() === f.$date.getDate();
                    },
                    isDisabled: function(a) {
                        var b = a.getTime();
                        if (b < h.minDate || b > h.maxDate) return !0;
                        if (-1 !== h.daysOfWeekDisabled.indexOf(a.getDay())) return !0;
                        if (h.disabledDateRanges) for (var c = 0; c < h.disabledDateRanges.length; c++) if (b >= h.disabledDateRanges[c].start && b <= h.disabledDateRanges[c].end) return !0;
                        return !1;
                    },
                    onKeyDown: function(a) {
                        if (f.$date) {
                            var b, c = f.$date.getTime();
                            37 === a.keyCode ? b = new Date(c - 864e5) : 38 === a.keyCode ? b = new Date(c - 6048e5) : 39 === a.keyCode ? b = new Date(c + 864e5) : 40 === a.keyCode && (b = new Date(c + 6048e5)), 
                            this.isDisabled(b) || f.select(b, !0);
                        }
                    }
                }, {
                    name: "month",
                    format: h.monthFormat,
                    split: 4,
                    steps: {
                        year: 1
                    },
                    update: function(a, b) {
                        this.built && a.getFullYear() === p.year ? a.getMonth() !== p.month && (angular.extend(p, {
                            month: f.$date.getMonth(),
                            date: f.$date.getDate()
                        }), f.$updateSelected()) : (angular.extend(p, {
                            year: f.$date.getFullYear(),
                            month: f.$date.getMonth(),
                            date: f.$date.getDate()
                        }), f.$build());
                    },
                    build: function() {
                        for (var b, c = (new Date(p.year, 0, 1), []), d = 0; 12 > d; d++) b = new Date(p.year, d, 1), 
                        c.push({
                            date: b,
                            label: j(b, this.format),
                            selected: f.$isSelected(b),
                            disabled: this.isDisabled(b)
                        });
                        g.title = j(b, h.yearTitleFormat), g.showLabels = !1, g.rows = a(c, this.split), 
                        this.built = !0;
                    },
                    isSelected: function(a) {
                        return f.$date && a.getFullYear() === f.$date.getFullYear() && a.getMonth() === f.$date.getMonth();
                    },
                    isDisabled: function(a) {
                        var b = +new Date(a.getFullYear(), a.getMonth() + 1, 0);
                        return b < h.minDate || a.getTime() > h.maxDate;
                    },
                    onKeyDown: function(a) {
                        if (f.$date) {
                            var b = f.$date.getMonth(), c = new Date(f.$date);
                            37 === a.keyCode ? c.setMonth(b - 1) : 38 === a.keyCode ? c.setMonth(b - 4) : 39 === a.keyCode ? c.setMonth(b + 1) : 40 === a.keyCode && c.setMonth(b + 4), 
                            this.isDisabled(c) || f.select(c, !0);
                        }
                    }
                }, {
                    name: "year",
                    format: h.yearFormat,
                    split: 4,
                    steps: {
                        year: 12
                    },
                    update: function(a, b) {
                        !this.built || b || parseInt(a.getFullYear() / 20, 10) !== parseInt(p.year / 20, 10) ? (angular.extend(p, {
                            year: f.$date.getFullYear(),
                            month: f.$date.getMonth(),
                            date: f.$date.getDate()
                        }), f.$build()) : a.getFullYear() !== p.year && (angular.extend(p, {
                            year: f.$date.getFullYear(),
                            month: f.$date.getMonth(),
                            date: f.$date.getDate()
                        }), f.$updateSelected());
                    },
                    build: function() {
                        for (var b, c = p.year - p.year % (3 * this.split), d = [], e = 0; 12 > e; e++) b = new Date(c + e, 0, 1), 
                        d.push({
                            date: b,
                            label: j(b, this.format),
                            selected: f.$isSelected(b),
                            disabled: this.isDisabled(b)
                        });
                        g.title = d[0].label + "-" + d[d.length - 1].label, g.showLabels = !1, g.rows = a(d, this.split), 
                        this.built = !0;
                    },
                    isSelected: function(a) {
                        return f.$date && a.getFullYear() === f.$date.getFullYear();
                    },
                    isDisabled: function(a) {
                        var b = +new Date(a.getFullYear() + 1, 0, 0);
                        return b < h.minDate || a.getTime() > h.maxDate;
                    },
                    onKeyDown: function(a) {
                        if (f.$date) {
                            var b = f.$date.getFullYear(), c = new Date(f.$date);
                            37 === a.keyCode ? c.setYear(b - 1) : 38 === a.keyCode ? c.setYear(b - 4) : 39 === a.keyCode ? c.setYear(b + 1) : 40 === a.keyCode && c.setYear(b + 4), 
                            this.isDisabled(c) || f.select(c, !0);
                        }
                    }
                } ];
                return {
                    views: h.minView ? Array.prototype.slice.call(q, h.minView) : q,
                    viewDate: p
                };
            };
        } ];
    }), angular.module("mgcrea.ngStrap.collapse", []).provider("$collapse", function() {
        var a = this.defaults = {
            animation: "am-collapse",
            disallowToggle: !1,
            activeClass: "in",
            startCollapsed: !1,
            allowMultiple: !1
        }, b = this.controller = function(b, c, d) {
            function e(a) {
                for (var b = i.$targets.$active, c = 0; c < b.length; c++) a < b[c] && (b[c] = b[c] - 1), 
                b[c] === i.$targets.length && (b[c] = i.$targets.length - 1);
            }
            function f(a) {
                var b = i.$targets.$active;
                return -1 === b.indexOf(a) ? !1 : !0;
            }
            function g(a) {
                var b = i.$targets.$active.indexOf(a);
                -1 !== b && i.$targets.$active.splice(b, 1);
            }
            function h(a) {
                i.$options.allowMultiple || i.$targets.$active.splice(0, 1), -1 === i.$targets.$active.indexOf(a) && i.$targets.$active.push(a);
            }
            var i = this;
            i.$options = angular.copy(a), angular.forEach([ "animation", "disallowToggle", "activeClass", "startCollapsed", "allowMultiple" ], function(a) {
                angular.isDefined(d[a]) && (i.$options[a] = d[a]);
            });
            var j = /^(false|0|)$/i;
            angular.forEach([ "disallowToggle", "startCollapsed", "allowMultiple" ], function(a) {
                angular.isDefined(d[a]) && j.test(d[a]) && (i.$options[a] = !1);
            }), i.$toggles = [], i.$targets = [], i.$viewChangeListeners = [], i.$registerToggle = function(a) {
                i.$toggles.push(a);
            }, i.$registerTarget = function(a) {
                i.$targets.push(a);
            }, i.$unregisterToggle = function(a) {
                var b = i.$toggles.indexOf(a);
                i.$toggles.splice(b, 1);
            }, i.$unregisterTarget = function(a) {
                var b = i.$targets.indexOf(a);
                i.$targets.splice(b, 1), i.$options.allowMultiple && g(a), e(b), i.$viewChangeListeners.forEach(function(a) {
                    a();
                });
            }, i.$targets.$active = i.$options.startCollapsed ? [] : [ 0 ], i.$setActive = b.$setActive = function(a) {
                angular.isArray(a) ? i.$targets.$active = a : i.$options.disallowToggle ? h(a) : f(a) ? g(a) : h(a), 
                i.$viewChangeListeners.forEach(function(a) {
                    a();
                });
            }, i.$activeIndexes = function() {
                return i.$options.allowMultiple ? i.$targets.$active : 1 === i.$targets.$active.length ? i.$targets.$active[0] : -1;
            };
        };
        this.$get = function() {
            var c = {};
            return c.defaults = a, c.controller = b, c;
        };
    }).directive("bsCollapse", [ "$window", "$animate", "$collapse", function(a, b, c) {
        c.defaults;
        return {
            require: [ "?ngModel", "bsCollapse" ],
            controller: [ "$scope", "$element", "$attrs", c.controller ],
            link: function(a, b, c, d) {
                var e = d[0], f = d[1];
                e && (f.$viewChangeListeners.push(function() {
                    e.$setViewValue(f.$activeIndexes());
                }), e.$formatters.push(function(a) {
                    if (angular.isArray(a)) f.$setActive(a); else {
                        var b = f.$activeIndexes();
                        angular.isArray(b) ? -1 === b.indexOf(1 * a) && f.$setActive(1 * a) : b !== 1 * a && f.$setActive(1 * a);
                    }
                    return a;
                }));
            }
        };
    } ]).directive("bsCollapseToggle", function() {
        return {
            require: [ "^?ngModel", "^bsCollapse" ],
            link: function(a, b, c, d) {
                var e = (d[0], d[1]);
                b.attr("data-toggle", "collapse"), e.$registerToggle(b), a.$on("$destroy", function() {
                    e.$unregisterToggle(b);
                }), b.on("click", function() {
                    var d = c.bsCollapseToggle && "bs-collapse-toggle" !== c.bsCollapseToggle ? c.bsCollapseToggle : e.$toggles.indexOf(b);
                    e.$setActive(1 * d), a.$apply();
                });
            }
        };
    }).directive("bsCollapseTarget", [ "$animate", function(a) {
        return {
            require: [ "^?ngModel", "^bsCollapse" ],
            link: function(b, c, d, e) {
                function f() {
                    var b = g.$targets.indexOf(c), d = g.$activeIndexes(), e = "removeClass";
                    angular.isArray(d) ? -1 !== d.indexOf(b) && (e = "addClass") : b === d && (e = "addClass"), 
                    a[e](c, g.$options.activeClass);
                }
                var g = (e[0], e[1]);
                c.addClass("collapse"), g.$options.animation && c.addClass(g.$options.animation), 
                g.$registerTarget(c), b.$on("$destroy", function() {
                    g.$unregisterTarget(c);
                }), g.$viewChangeListeners.push(function() {
                    f();
                }), f();
            }
        };
    } ]), angular.module("mgcrea.ngStrap.button", []).provider("$button", function() {
        var a = this.defaults = {
            activeClass: "active",
            toggleEvent: "click"
        };
        this.$get = function() {
            return {
                defaults: a
            };
        };
    }).directive("bsCheckboxGroup", function() {
        return {
            restrict: "A",
            require: "ngModel",
            compile: function(a, b) {
                a.attr("data-toggle", "buttons"), a.removeAttr("ng-model");
                var c = a[0].querySelectorAll('input[type="checkbox"]');
                angular.forEach(c, function(a) {
                    var c = angular.element(a);
                    c.attr("bs-checkbox", ""), c.attr("ng-model", b.ngModel + "." + c.attr("value"));
                });
            }
        };
    }).directive("bsCheckbox", [ "$button", "$$rAF", function(a, b) {
        var c = a.defaults, d = /^(true|false|\d+)$/;
        return {
            restrict: "A",
            require: "ngModel",
            link: function(a, e, f, g) {
                var h = c, i = "INPUT" === e[0].nodeName, j = i ? e.parent() : e, k = angular.isDefined(f.trueValue) ? f.trueValue : !0;
                d.test(f.trueValue) && (k = a.$eval(f.trueValue));
                var l = angular.isDefined(f.falseValue) ? f.falseValue : !1;
                d.test(f.falseValue) && (l = a.$eval(f.falseValue));
                var m = "boolean" != typeof k || "boolean" != typeof l;
                m && (g.$parsers.push(function(a) {
                    return a ? k : l;
                }), g.$formatters.push(function(a) {
                    return angular.equals(a, k);
                }), a.$watch(f.ngModel, function(a, b) {
                    g.$render();
                })), g.$render = function() {
                    var a = angular.equals(g.$modelValue, k);
                    b(function() {
                        i && (e[0].checked = a), j.toggleClass(h.activeClass, a);
                    });
                }, e.bind(h.toggleEvent, function() {
                    a.$apply(function() {
                        i || g.$setViewValue(!j.hasClass("active")), m || g.$render();
                    });
                });
            }
        };
    } ]).directive("bsRadioGroup", function() {
        return {
            restrict: "A",
            require: "ngModel",
            compile: function(a, b) {
                a.attr("data-toggle", "buttons"), a.removeAttr("ng-model");
                var c = a[0].querySelectorAll('input[type="radio"]');
                angular.forEach(c, function(a) {
                    angular.element(a).attr("bs-radio", ""), angular.element(a).attr("ng-model", b.ngModel);
                });
            }
        };
    }).directive("bsRadio", [ "$button", "$$rAF", function(a, b) {
        var c = a.defaults, d = /^(true|false|\d+)$/;
        return {
            restrict: "A",
            require: "ngModel",
            link: function(a, e, f, g) {
                var h, i = c, j = "INPUT" === e[0].nodeName, k = j ? e.parent() : e;
                f.$observe("value", function(b) {
                    h = d.test(b) ? a.$eval(b) : b, g.$render();
                }), g.$render = function() {
                    var a = angular.equals(g.$modelValue, h);
                    b(function() {
                        j && (e[0].checked = a), k.toggleClass(i.activeClass, a);
                    });
                }, e.bind(i.toggleEvent, function() {
                    a.$apply(function() {
                        g.$setViewValue(h), g.$render();
                    });
                });
            }
        };
    } ]), angular.module("mgcrea.ngStrap.alert", [ "mgcrea.ngStrap.modal" ]).provider("$alert", function() {
        var a = this.defaults = {
            animation: "am-fade",
            prefixClass: "alert",
            prefixEvent: "alert",
            placement: null,
            templateUrl: "alert/alert.tpl.html",
            container: !1,
            element: null,
            backdrop: !1,
            keyboard: !0,
            show: !0,
            duration: !1,
            type: !1,
            dismissable: !0
        };
        this.$get = [ "$modal", "$timeout", function(b, c) {
            function d(d) {
                var e = {}, f = angular.extend({}, a, d);
                e = b(f), e.$scope.dismissable = !!f.dismissable, f.type && (e.$scope.type = f.type);
                var g = e.show;
                return f.duration && (e.show = function() {
                    g(), c(function() {
                        e.hide();
                    }, 1e3 * f.duration);
                }), e;
            }
            return d;
        } ];
    }).directive("bsAlert", [ "$window", "$sce", "$alert", function(a, b, c) {
        a.requestAnimationFrame || a.setTimeout;
        return {
            restrict: "EAC",
            scope: !0,
            link: function(a, d, e, f) {
                var g = {
                    scope: a,
                    element: d,
                    show: !1
                };
                angular.forEach([ "template", "templateUrl", "controller", "controllerAs", "placement", "keyboard", "html", "container", "animation", "duration", "dismissable" ], function(a) {
                    angular.isDefined(e[a]) && (g[a] = e[a]);
                });
                var h = /^(false|0|)$/i;
                angular.forEach([ "keyboard", "html", "container", "dismissable" ], function(a) {
                    angular.isDefined(e[a]) && h.test(e[a]) && (g[a] = !1);
                }), a.hasOwnProperty("title") || (a.title = ""), angular.forEach([ "title", "content", "type" ], function(c) {
                    e[c] && e.$observe(c, function(d, e) {
                        a[c] = b.trustAsHtml(d);
                    });
                }), e.bsAlert && a.$watch(e.bsAlert, function(b, c) {
                    angular.isObject(b) ? angular.extend(a, b) : a.content = b;
                }, !0);
                var i = c(g);
                d.on(e.trigger || "click", i.toggle), a.$on("$destroy", function() {
                    i && i.destroy(), g = null, i = null;
                });
            }
        };
    } ]), angular.module("mgcrea.ngStrap.affix", [ "mgcrea.ngStrap.helpers.dimensions", "mgcrea.ngStrap.helpers.debounce" ]).provider("$affix", function() {
        var a = this.defaults = {
            offsetTop: "auto",
            inlineStyles: !0
        };
        this.$get = [ "$window", "debounce", "dimensions", function(b, c, d) {
            function e(e, h) {
                function i(a, b, c) {
                    var d = j(), e = k();
                    return s >= d ? "top" : null !== a && d + a <= b.top ? "middle" : null !== t && b.top + c + q >= e - t ? "bottom" : "middle";
                }
                function j() {
                    return n[0] === b ? b.pageYOffset : n[0].scrollTop;
                }
                function k() {
                    return n[0] === b ? b.document.body.scrollHeight : n[0].scrollHeight;
                }
                var l = {}, m = angular.extend({}, a, h), n = m.target, o = "affix affix-top affix-bottom", p = !1, q = 0, r = 0, s = 0, t = 0, u = null, v = null, w = e.parent();
                if (m.offsetParent) if (m.offsetParent.match(/^\d+$/)) for (var x = 0; x < 1 * m.offsetParent - 1; x++) w = w.parent(); else w = angular.element(m.offsetParent);
                return l.init = function() {
                    this.$parseOffsets(), r = d.offset(e[0]).top + q, p = !e[0].style.width, n.on("scroll", this.checkPosition), 
                    n.on("click", this.checkPositionWithEventLoop), g.on("resize", this.$debouncedOnResize), 
                    this.checkPosition(), this.checkPositionWithEventLoop();
                }, l.destroy = function() {
                    n.off("scroll", this.checkPosition), n.off("click", this.checkPositionWithEventLoop), 
                    g.off("resize", this.$debouncedOnResize);
                }, l.checkPositionWithEventLoop = function() {
                    setTimeout(l.checkPosition, 1);
                }, l.checkPosition = function() {
                    var a = j(), b = d.offset(e[0]), c = d.height(e[0]), g = i(v, b, c);
                    u !== g && (u = g, "top" === g ? (v = null, p && e.css("width", ""), m.inlineStyles && (e.css("position", m.offsetParent ? "" : "relative"), 
                    e.css("top", ""))) : "bottom" === g ? (v = m.offsetUnpin ? -(1 * m.offsetUnpin) : b.top - a, 
                    p && e.css("width", ""), m.inlineStyles && (e.css("position", m.offsetParent ? "" : "relative"), 
                    e.css("top", m.offsetParent ? "" : f[0].offsetHeight - t - c - r + "px"))) : (v = null, 
                    p && e.css("width", e[0].offsetWidth + "px"), m.inlineStyles && (e.css("position", "fixed"), 
                    e.css("top", q + "px"))), e.removeClass(o).addClass("affix" + ("middle" !== g ? "-" + g : "")));
                }, l.$onResize = function() {
                    l.$parseOffsets(), l.checkPosition();
                }, l.$debouncedOnResize = c(l.$onResize, 50), l.$parseOffsets = function() {
                    var a = e.css("position");
                    m.inlineStyles && e.css("position", m.offsetParent ? "" : "relative"), m.offsetTop && ("auto" === m.offsetTop && (m.offsetTop = "+0"), 
                    m.offsetTop.match(/^[-+]\d+$/) ? (q = 1 * -m.offsetTop, s = m.offsetParent ? d.offset(w[0]).top + 1 * m.offsetTop : d.offset(e[0]).top - d.css(e[0], "marginTop", !0) + 1 * m.offsetTop) : s = 1 * m.offsetTop), 
                    m.offsetBottom && (t = m.offsetParent && m.offsetBottom.match(/^[-+]\d+$/) ? k() - (d.offset(w[0]).top + d.height(w[0])) + 1 * m.offsetBottom + 1 : 1 * m.offsetBottom), 
                    m.inlineStyles && e.css("position", a);
                }, l.init(), l;
            }
            var f = angular.element(b.document.body), g = angular.element(b);
            return e;
        } ];
    }).directive("bsAffix", [ "$affix", "$window", function(a, b) {
        return {
            restrict: "EAC",
            require: "^?bsAffixTarget",
            link: function(c, d, e, f) {
                var g = {
                    scope: c,
                    target: f ? f.$element : angular.element(b)
                };
                angular.forEach([ "offsetTop", "offsetBottom", "offsetParent", "offsetUnpin", "inlineStyles" ], function(a) {
                    if (angular.isDefined(e[a])) {
                        var b = e[a];
                        /true/i.test(b) && (b = !0), /false/i.test(b) && (b = !1), g[a] = b;
                    }
                });
                var h = a(d, g);
                c.$on("$destroy", function() {
                    h && h.destroy(), g = null, h = null;
                });
            }
        };
    } ]).directive("bsAffixTarget", function() {
        return {
            controller: [ "$element", function(a) {
                this.$element = a;
            } ]
        };
    }), angular.module("mgcrea.ngStrap", [ "mgcrea.ngStrap.modal", "mgcrea.ngStrap.aside", "mgcrea.ngStrap.alert", "mgcrea.ngStrap.button", "mgcrea.ngStrap.select", "mgcrea.ngStrap.datepicker", "mgcrea.ngStrap.timepicker", "mgcrea.ngStrap.navbar", "mgcrea.ngStrap.tooltip", "mgcrea.ngStrap.popover", "mgcrea.ngStrap.dropdown", "mgcrea.ngStrap.typeahead", "mgcrea.ngStrap.scrollspy", "mgcrea.ngStrap.affix", "mgcrea.ngStrap.tab", "mgcrea.ngStrap.collapse" ]);
}(window, document), function(a, b, c) {
    "use strict";
    angular.module("mgcrea.ngStrap.alert").run([ "$templateCache", function(a) {
        a.put("alert/alert.tpl.html", '<div class="alert" ng-class="[type ? \'alert-\' + type : null]"><button type="button" class="close" ng-if="dismissable" ng-click="$hide()">&times;</button> <strong ng-bind="title"></strong>&nbsp;<span ng-bind-html="content"></span></div>');
    } ]), angular.module("mgcrea.ngStrap.datepicker").run([ "$templateCache", function(a) {
        a.put("datepicker/datepicker.tpl.html", '<div class="dropdown-menu datepicker" ng-class="\'datepicker-mode-\' + $mode" style="max-width: 320px"><table style="table-layout: fixed; height: 100%; width: 100%"><thead><tr class="text-center"><th><button tabindex="-1" type="button" class="btn btn-default pull-left" ng-click="$selectPane(-1)"><i class="{{$iconLeft}}"></i></button></th><th colspan="{{ rows[0].length - 2 }}"><button tabindex="-1" type="button" class="btn btn-default btn-block text-strong" ng-click="$toggleMode()"><strong style="text-transform: capitalize" ng-bind="title"></strong></button></th><th><button tabindex="-1" type="button" class="btn btn-default pull-right" ng-click="$selectPane(+1)"><i class="{{$iconRight}}"></i></button></th></tr><tr ng-if="showLabels" ng-bind-html="labels"></tr></thead><tbody><tr ng-repeat="(i, row) in rows" height="{{ 100 / rows.length }}%"><td class="text-center" ng-repeat="(j, el) in row"><button tabindex="-1" type="button" class="btn btn-default" style="width: 100%" ng-class="{\'btn-primary\': el.selected, \'btn-info btn-today\': el.isToday && !el.selected}" ng-click="$select(el.date)" ng-disabled="el.disabled"><span ng-class="{\'text-muted\': el.muted}" ng-bind="el.label"></span></button></td></tr></tbody></table></div>');
    } ]), angular.module("mgcrea.ngStrap.aside").run([ "$templateCache", function(a) {
        a.put("aside/aside.tpl.html", '<div class="aside" tabindex="-1" role="dialog"><div class="aside-dialog"><div class="aside-content"><div class="aside-header" ng-show="title"><button type="button" class="close" ng-click="$hide()">&times;</button><h4 class="aside-title" ng-bind="title"></h4></div><div class="aside-body" ng-bind="content"></div><div class="aside-footer"><button type="button" class="btn btn-default" ng-click="$hide()">Close</button></div></div></div></div>');
    } ]), angular.module("mgcrea.ngStrap.dropdown").run([ "$templateCache", function(a) {
        a.put("dropdown/dropdown.tpl.html", '<ul tabindex="-1" class="dropdown-menu" role="menu" ng-show="content && content.length"><li role="presentation" ng-class="{divider: item.divider, active: item.active}" ng-repeat="item in content"><a role="menuitem" tabindex="-1" ng-href="{{item.href}}" ng-if="!item.divider && item.href" target="{{item.target || \'\'}}" ng-bind="item.text"></a> <a role="menuitem" tabindex="-1" href="javascript:void(0)" ng-if="!item.divider && item.click" ng-click="$eval(item.click);$hide()" ng-bind="item.text"></a></li></ul>');
    } ]), angular.module("mgcrea.ngStrap.modal").run([ "$templateCache", function(a) {
        a.put("modal/modal.tpl.html", '<div class="modal" tabindex="-1" role="dialog" aria-hidden="true"><div class="modal-dialog"><div class="modal-content"><div class="modal-header" ng-show="title"><button type="button" class="close" aria-label="Close" ng-click="$hide()"><span aria-hidden="true">&times;</span></button><h4 class="modal-title" ng-bind="title"></h4></div><div class="modal-body" ng-bind="content"></div><div class="modal-footer"><button type="button" class="btn btn-default" ng-click="$hide()">Close</button></div></div></div></div>');
    } ]), angular.module("mgcrea.ngStrap.popover").run([ "$templateCache", function(a) {
        a.put("popover/popover.tpl.html", '<div class="popover" tabindex="-1"><div class="arrow"></div><h3 class="popover-title" ng-bind="title" ng-show="title"></h3><div class="popover-content" ng-bind="content"></div></div>');
    } ]), angular.module("mgcrea.ngStrap.select").run([ "$templateCache", function(a) {
        a.put("select/select.tpl.html", '<ul tabindex="-1" class="select dropdown-menu" ng-show="$isVisible()" role="select"><li ng-if="$showAllNoneButtons"><div class="btn-group" style="margin-bottom: 5px; margin-left: 5px"><button type="button" class="btn btn-default btn-xs" ng-click="$selectAll()">{{$allText}}</button> <button type="button" class="btn btn-default btn-xs" ng-click="$selectNone()">{{$noneText}}</button></div></li><li role="presentation" ng-repeat="match in $matches" ng-class="{active: $isActive($index)}"><a style="cursor: default" role="menuitem" tabindex="-1" ng-click="$select($index, $event)"><i class="{{$iconCheckmark}} pull-right" ng-if="$isMultiple && $isActive($index)"></i> <span ng-bind="match.label"></span></a></li></ul>');
    } ]), angular.module("mgcrea.ngStrap.timepicker").run([ "$templateCache", function(a) {
        a.put("timepicker/timepicker.tpl.html", '<div class="dropdown-menu timepicker" style="min-width: 0px;width: auto"><table height="100%"><thead><tr class="text-center"><th><button tabindex="-1" type="button" class="btn btn-default pull-left" ng-click="$arrowAction(-1, 0)"><i class="{{ $iconUp }}"></i></button></th><th>&nbsp;</th><th><button tabindex="-1" type="button" class="btn btn-default pull-left" ng-click="$arrowAction(-1, 1)"><i class="{{ $iconUp }}"></i></button></th><th>&nbsp;</th><th><button ng-if="showSeconds" tabindex="-1" type="button" class="btn btn-default pull-left" ng-click="$arrowAction(-1, 2)"><i class="{{ $iconUp }}"></i></button></th></tr></thead><tbody><tr ng-repeat="(i, row) in rows"><td class="text-center"><button tabindex="-1" style="width: 100%" type="button" class="btn btn-default" ng-class="{\'btn-primary\': row[0].selected}" ng-click="$select(row[0].date, 0)" ng-disabled="row[0].disabled"><span ng-class="{\'text-muted\': row[0].muted}" ng-bind="row[0].label"></span></button></td><td><span ng-bind="i == midIndex ? timeSeparator : \' \'"></span></td><td class="text-center"><button tabindex="-1" ng-if="row[1].date" style="width: 100%" type="button" class="btn btn-default" ng-class="{\'btn-primary\': row[1].selected}" ng-click="$select(row[1].date, 1)" ng-disabled="row[1].disabled"><span ng-class="{\'text-muted\': row[1].muted}" ng-bind="row[1].label"></span></button></td><td><span ng-bind="i == midIndex ? timeSeparator : \' \'"></span></td><td class="text-center"><button tabindex="-1" ng-if="showSeconds && row[2].date" style="width: 100%" type="button" class="btn btn-default" ng-class="{\'btn-primary\': row[2].selected}" ng-click="$select(row[2].date, 2)" ng-disabled="row[2].disabled"><span ng-class="{\'text-muted\': row[2].muted}" ng-bind="row[2].label"></span></button></td><td ng-if="showAM">&nbsp;</td><td ng-if="showAM"><button tabindex="-1" ng-show="i == midIndex - !isAM * 1" style="width: 100%" type="button" ng-class="{\'btn-primary\': !!isAM}" class="btn btn-default" ng-click="$switchMeridian()" ng-disabled="el.disabled">AM</button> <button tabindex="-1" ng-show="i == midIndex + 1 - !isAM * 1" style="width: 100%" type="button" ng-class="{\'btn-primary\': !isAM}" class="btn btn-default" ng-click="$switchMeridian()" ng-disabled="el.disabled">PM</button></td></tr></tbody><tfoot><tr class="text-center"><th><button tabindex="-1" type="button" class="btn btn-default pull-left" ng-click="$arrowAction(1, 0)"><i class="{{ $iconDown }}"></i></button></th><th>&nbsp;</th><th><button tabindex="-1" type="button" class="btn btn-default pull-left" ng-click="$arrowAction(1, 1)"><i class="{{ $iconDown }}"></i></button></th><th>&nbsp;</th><th><button ng-if="showSeconds" tabindex="-1" type="button" class="btn btn-default pull-left" ng-click="$arrowAction(1, 2)"><i class="{{ $iconDown }}"></i></button></th></tr></tfoot></table></div>');
    } ]), angular.module("mgcrea.ngStrap.tab").run([ "$templateCache", function(a) {
        a.put("tab/tab.tpl.html", '<ul class="nav" ng-class="$navClass" role="tablist"><li role="presentation" ng-repeat="$pane in $panes track by $index" ng-class="[ $isActive($pane, $index) ? $activeClass : \'\', $pane.disabled ? \'disabled\' : \'\' ]"><a role="tab" data-toggle="tab" ng-click="!$pane.disabled && $setActive($pane.name || $index)" data-index="{{ $index }}" ng-bind-html="$pane.title" aria-controls="$pane.title"></a></li></ul><div ng-transclude class="tab-content"></div>');
    } ]), angular.module("mgcrea.ngStrap.typeahead").run([ "$templateCache", function(a) {
        a.put("typeahead/typeahead.tpl.html", '<ul tabindex="-1" class="typeahead dropdown-menu" ng-show="$isVisible()" role="select"><li role="presentation" ng-repeat="match in $matches" ng-class="{active: $index == $activeIndex}"><a role="menuitem" tabindex="-1" ng-click="$select($index, $event)" ng-bind="match.label"></a></li></ul>');
    } ]), angular.module("mgcrea.ngStrap.tooltip").run([ "$templateCache", function(a) {
        a.put("tooltip/tooltip.tpl.html", '<div class="tooltip in" ng-show="title"><div class="tooltip-arrow"></div><div class="tooltip-inner" ng-bind="title"></div></div>');
    } ]);
}(window, document);
//# sourceMappingURL=angular-strap.min.js.map